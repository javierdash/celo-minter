{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.IdentityMetadataWrapper = exports.IdentityMetadataType = exports.ClaimTypes = void 0;\n\nvar address_1 = require(\"@celo/base/lib/address\");\n\nvar async_1 = require(\"@celo/base/lib/async\");\n\nvar io_1 = require(\"@celo/utils/lib/io\");\n\nvar signatureUtils_1 = require(\"@celo/utils/lib/signatureUtils\");\n\nvar cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\n\nvar Either_1 = require(\"fp-ts/lib/Either\");\n\nvar fs_1 = require(\"fs\");\n\nvar t = __importStar(require(\"io-ts\"));\n\nvar PathReporter_1 = require(\"io-ts/lib/PathReporter\");\n\nvar claim_1 = require(\"./claims/claim\");\n\nvar types_1 = require(\"./claims/types\");\n\nvar types_2 = require(\"./claims/types\");\n\nObject.defineProperty(exports, \"ClaimTypes\", {\n  enumerable: true,\n  get: function () {\n    return types_2.ClaimTypes;\n  }\n});\nvar MetaType = t.type({\n  address: io_1.AddressType,\n  signature: io_1.SignatureType\n});\nexports.IdentityMetadataType = t.type({\n  claims: t.array(claim_1.ClaimType),\n  meta: MetaType\n});\n\nvar IdentityMetadataWrapper =\n/** @class */\nfunction () {\n  function IdentityMetadataWrapper(data) {\n    this.data = data;\n  }\n\n  IdentityMetadataWrapper.fromEmpty = function (address) {\n    return new IdentityMetadataWrapper({\n      claims: [],\n      meta: {\n        address: address,\n        signature: ''\n      }\n    });\n  };\n\n  IdentityMetadataWrapper.fetchFromURL = function (kit, url, tries) {\n    if (tries === void 0) {\n      tries = 3;\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , (0, async_1.selectiveRetryAsyncWithBackOff)(function () {\n          return __awaiter(_this, void 0, void 0, function () {\n            var resp, _a, _b;\n\n            return __generator(this, function (_c) {\n              switch (_c.label) {\n                case 0:\n                  return [4\n                  /*yield*/\n                  , (0, cross_fetch_1.default)(url)];\n\n                case 1:\n                  resp = _c.sent();\n\n                  if (!resp.ok) {\n                    throw new Error(\"Request failed with status \" + resp.status);\n                  }\n\n                  _a = this.fromRawString;\n                  _b = [kit];\n                  return [4\n                  /*yield*/\n                  , resp.text()];\n\n                case 2:\n                  return [2\n                  /*return*/\n                  , _a.apply(this, _b.concat([_c.sent()]))];\n              }\n            });\n          });\n        }, tries, ['Request failed with status 404'], [])];\n      });\n    });\n  };\n\n  IdentityMetadataWrapper.fromFile = function (kit, path) {\n    return this.fromRawString(kit, (0, fs_1.readFileSync)(path, 'utf-8'));\n  };\n\n  IdentityMetadataWrapper.verifySigner = function (kit, hash, signature, metadata) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , this.verifySignerForAddress(kit, hash, signature, metadata.address)];\n      });\n    });\n  };\n\n  IdentityMetadataWrapper.verifySignerForAddress = function (kit, hash, signature, address) {\n    return __awaiter(this, void 0, void 0, function () {\n      var accounts, signers;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!!(0, signatureUtils_1.verifySignature)(hash, signature, address)) return [3\n            /*break*/\n            , 5];\n            return [4\n            /*yield*/\n            , kit.contracts.getAccounts()];\n\n          case 1:\n            accounts = _a.sent();\n            return [4\n            /*yield*/\n            , accounts.isAccount(address)];\n\n          case 2:\n            if (!_a.sent()) return [3\n            /*break*/\n            , 4];\n            return [4\n            /*yield*/\n            , Promise.all([accounts.getVoteSigner(address), accounts.getValidatorSigner(address), accounts.getAttestationSigner(address)])];\n\n          case 3:\n            signers = _a.sent();\n            return [2\n            /*return*/\n            , signers.some(function (signer) {\n              return (0, signatureUtils_1.verifySignature)(hash, signature, signer);\n            })];\n\n          case 4:\n            return [2\n            /*return*/\n            , false];\n\n          case 5:\n            return [2\n            /*return*/\n            , true];\n        }\n      });\n    });\n  };\n\n  IdentityMetadataWrapper.fromRawString = function (kit, rawData) {\n    return __awaiter(this, void 0, void 0, function () {\n      var data, validatedData, claims, hash, _a, res;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            data = JSON.parse(rawData);\n            validatedData = exports.IdentityMetadataType.decode(data);\n\n            if ((0, Either_1.isLeft)(validatedData)) {\n              // TODO: We could probably return a more useful error in the future\n              throw new Error(PathReporter_1.PathReporter.report(validatedData).join(', '));\n            }\n\n            claims = validatedData.right.claims;\n            hash = (0, claim_1.hashOfClaims)(claims);\n            _a = claims.length > 0;\n            if (!_a) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , this.verifySigner(kit, hash, validatedData.right.meta.signature, validatedData.right.meta)];\n\n          case 1:\n            _a = !_b.sent();\n            _b.label = 2;\n\n          case 2:\n            if (_a) {\n              throw new Error(\"Signature could not be validated. Guessing signer: \" + (0, signatureUtils_1.guessSigner)(hash, validatedData.right.meta.signature));\n            }\n\n            res = new IdentityMetadataWrapper(validatedData.right); // Verify that singular claim types appear at most once\n\n            types_1.SINGULAR_CLAIM_TYPES.forEach(function (claimType) {\n              var results = res.filterClaims(claimType);\n\n              if (results.length > 1) {\n                throw new Error(\"Found \" + results.length + \" claims of type \" + claimType + \", should be at most 1\");\n              }\n            });\n            return [2\n            /*return*/\n            , res];\n        }\n      });\n    });\n  };\n\n  Object.defineProperty(IdentityMetadataWrapper.prototype, \"claims\", {\n    get: function () {\n      return this.data.claims;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  IdentityMetadataWrapper.prototype.hashOfClaims = function () {\n    return (0, claim_1.hashOfClaims)(this.data.claims);\n  };\n\n  IdentityMetadataWrapper.prototype.toString = function () {\n    return JSON.stringify({\n      claims: this.data.claims,\n      meta: this.data.meta\n    });\n  };\n\n  IdentityMetadataWrapper.prototype.addClaim = function (claim, signer) {\n    return __awaiter(this, void 0, void 0, function () {\n      var existingClaims, existingClaims, index, _a;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            switch (claim.type) {\n              case types_1.ClaimTypes.ACCOUNT:\n                if ((0, address_1.eqAddress)(claim.address, this.data.meta.address)) {\n                  throw new Error(\"Can't claim self\");\n                }\n\n                break;\n\n              case types_1.ClaimTypes.DOMAIN:\n                {\n                  existingClaims = this.data.claims.filter(function (el) {\n                    return el.domain === claim.domain;\n                  });\n\n                  if (existingClaims.length > 0) {\n                    return [2\n                    /*return*/\n                    , existingClaims[0]];\n                  }\n\n                  break;\n                }\n\n              case types_1.ClaimTypes.KEYBASE:\n                {\n                  existingClaims = this.data.claims.filter(function (el) {\n                    return el.username === claim.username;\n                  });\n\n                  if (existingClaims.length > 0) {\n                    return [2\n                    /*return*/\n                    , existingClaims[0]];\n                  }\n                }\n\n              default:\n                break;\n            }\n\n            if (types_1.SINGULAR_CLAIM_TYPES.includes(claim.type)) {\n              index = this.data.claims.findIndex((0, claim_1.isOfType)(claim.type));\n\n              if (index !== -1) {\n                this.data.claims.splice(index, 1);\n              }\n            }\n\n            this.data.claims.push(claim);\n            _a = this.data.meta;\n            return [4\n            /*yield*/\n            , signer.sign(this.hashOfClaims())];\n\n          case 1:\n            _a.signature = _b.sent();\n            return [2\n            /*return*/\n            , claim];\n        }\n      });\n    });\n  };\n\n  IdentityMetadataWrapper.prototype.findClaim = function (type) {\n    return this.data.claims.find((0, claim_1.isOfType)(type));\n  };\n\n  IdentityMetadataWrapper.prototype.filterClaims = function (type) {\n    return this.data.claims.filter((0, claim_1.isOfType)(type));\n  };\n\n  return IdentityMetadataWrapper;\n}();\n\nexports.IdentityMetadataWrapper = IdentityMetadataWrapper;","map":{"version":3,"sources":["../../src/identity/metadata.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IdentityMetadataWrapper = exports.IdentityMetadataType = exports.ClaimTypes = void 0;\nvar address_1 = require(\"@celo/base/lib/address\");\nvar async_1 = require(\"@celo/base/lib/async\");\nvar io_1 = require(\"@celo/utils/lib/io\");\nvar signatureUtils_1 = require(\"@celo/utils/lib/signatureUtils\");\nvar cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nvar Either_1 = require(\"fp-ts/lib/Either\");\nvar fs_1 = require(\"fs\");\nvar t = __importStar(require(\"io-ts\"));\nvar PathReporter_1 = require(\"io-ts/lib/PathReporter\");\nvar claim_1 = require(\"./claims/claim\");\nvar types_1 = require(\"./claims/types\");\nvar types_2 = require(\"./claims/types\");\nObject.defineProperty(exports, \"ClaimTypes\", { enumerable: true, get: function () { return types_2.ClaimTypes; } });\nvar MetaType = t.type({\n    address: io_1.AddressType,\n    signature: io_1.SignatureType,\n});\nexports.IdentityMetadataType = t.type({\n    claims: t.array(claim_1.ClaimType),\n    meta: MetaType,\n});\nvar IdentityMetadataWrapper = /** @class */ (function () {\n    function IdentityMetadataWrapper(data) {\n        this.data = data;\n    }\n    IdentityMetadataWrapper.fromEmpty = function (address) {\n        return new IdentityMetadataWrapper({\n            claims: [],\n            meta: {\n                address: address,\n                signature: '',\n            },\n        });\n    };\n    IdentityMetadataWrapper.fetchFromURL = function (kit, url, tries) {\n        if (tries === void 0) { tries = 3; }\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                return [2 /*return*/, (0, async_1.selectiveRetryAsyncWithBackOff)(function () { return __awaiter(_this, void 0, void 0, function () {\n                        var resp, _a, _b;\n                        return __generator(this, function (_c) {\n                            switch (_c.label) {\n                                case 0: return [4 /*yield*/, (0, cross_fetch_1.default)(url)];\n                                case 1:\n                                    resp = _c.sent();\n                                    if (!resp.ok) {\n                                        throw new Error(\"Request failed with status \" + resp.status);\n                                    }\n                                    _a = this.fromRawString;\n                                    _b = [kit];\n                                    return [4 /*yield*/, resp.text()];\n                                case 2: return [2 /*return*/, _a.apply(this, _b.concat([_c.sent()]))];\n                            }\n                        });\n                    }); }, tries, ['Request failed with status 404'], [])];\n            });\n        });\n    };\n    IdentityMetadataWrapper.fromFile = function (kit, path) {\n        return this.fromRawString(kit, (0, fs_1.readFileSync)(path, 'utf-8'));\n    };\n    IdentityMetadataWrapper.verifySigner = function (kit, hash, signature, metadata) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.verifySignerForAddress(kit, hash, signature, metadata.address)];\n            });\n        });\n    };\n    IdentityMetadataWrapper.verifySignerForAddress = function (kit, hash, signature, address) {\n        return __awaiter(this, void 0, void 0, function () {\n            var accounts, signers;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!!(0, signatureUtils_1.verifySignature)(hash, signature, address)) return [3 /*break*/, 5];\n                        return [4 /*yield*/, kit.contracts.getAccounts()];\n                    case 1:\n                        accounts = _a.sent();\n                        return [4 /*yield*/, accounts.isAccount(address)];\n                    case 2:\n                        if (!_a.sent()) return [3 /*break*/, 4];\n                        return [4 /*yield*/, Promise.all([\n                                accounts.getVoteSigner(address),\n                                accounts.getValidatorSigner(address),\n                                accounts.getAttestationSigner(address),\n                            ])];\n                    case 3:\n                        signers = _a.sent();\n                        return [2 /*return*/, signers.some(function (signer) { return (0, signatureUtils_1.verifySignature)(hash, signature, signer); })];\n                    case 4: return [2 /*return*/, false];\n                    case 5: return [2 /*return*/, true];\n                }\n            });\n        });\n    };\n    IdentityMetadataWrapper.fromRawString = function (kit, rawData) {\n        return __awaiter(this, void 0, void 0, function () {\n            var data, validatedData, claims, hash, _a, res;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        data = JSON.parse(rawData);\n                        validatedData = exports.IdentityMetadataType.decode(data);\n                        if ((0, Either_1.isLeft)(validatedData)) {\n                            // TODO: We could probably return a more useful error in the future\n                            throw new Error(PathReporter_1.PathReporter.report(validatedData).join(', '));\n                        }\n                        claims = validatedData.right.claims;\n                        hash = (0, claim_1.hashOfClaims)(claims);\n                        _a = claims.length > 0;\n                        if (!_a) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.verifySigner(kit, hash, validatedData.right.meta.signature, validatedData.right.meta)];\n                    case 1:\n                        _a = !(_b.sent());\n                        _b.label = 2;\n                    case 2:\n                        if (_a) {\n                            throw new Error(\"Signature could not be validated. Guessing signer: \" + (0, signatureUtils_1.guessSigner)(hash, validatedData.right.meta.signature));\n                        }\n                        res = new IdentityMetadataWrapper(validatedData.right);\n                        // Verify that singular claim types appear at most once\n                        types_1.SINGULAR_CLAIM_TYPES.forEach(function (claimType) {\n                            var results = res.filterClaims(claimType);\n                            if (results.length > 1) {\n                                throw new Error(\"Found \" + results.length + \" claims of type \" + claimType + \", should be at most 1\");\n                            }\n                        });\n                        return [2 /*return*/, res];\n                }\n            });\n        });\n    };\n    Object.defineProperty(IdentityMetadataWrapper.prototype, \"claims\", {\n        get: function () {\n            return this.data.claims;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    IdentityMetadataWrapper.prototype.hashOfClaims = function () {\n        return (0, claim_1.hashOfClaims)(this.data.claims);\n    };\n    IdentityMetadataWrapper.prototype.toString = function () {\n        return JSON.stringify({\n            claims: this.data.claims,\n            meta: this.data.meta,\n        });\n    };\n    IdentityMetadataWrapper.prototype.addClaim = function (claim, signer) {\n        return __awaiter(this, void 0, void 0, function () {\n            var existingClaims, existingClaims, index, _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        switch (claim.type) {\n                            case types_1.ClaimTypes.ACCOUNT:\n                                if ((0, address_1.eqAddress)(claim.address, this.data.meta.address)) {\n                                    throw new Error(\"Can't claim self\");\n                                }\n                                break;\n                            case types_1.ClaimTypes.DOMAIN: {\n                                existingClaims = this.data.claims.filter(function (el) { return el.domain === claim.domain; });\n                                if (existingClaims.length > 0) {\n                                    return [2 /*return*/, existingClaims[0]];\n                                }\n                                break;\n                            }\n                            case types_1.ClaimTypes.KEYBASE: {\n                                existingClaims = this.data.claims.filter(function (el) { return el.username === claim.username; });\n                                if (existingClaims.length > 0) {\n                                    return [2 /*return*/, existingClaims[0]];\n                                }\n                            }\n                            default:\n                                break;\n                        }\n                        if (types_1.SINGULAR_CLAIM_TYPES.includes(claim.type)) {\n                            index = this.data.claims.findIndex((0, claim_1.isOfType)(claim.type));\n                            if (index !== -1) {\n                                this.data.claims.splice(index, 1);\n                            }\n                        }\n                        this.data.claims.push(claim);\n                        _a = this.data.meta;\n                        return [4 /*yield*/, signer.sign(this.hashOfClaims())];\n                    case 1:\n                        _a.signature = _b.sent();\n                        return [2 /*return*/, claim];\n                }\n            });\n        });\n    };\n    IdentityMetadataWrapper.prototype.findClaim = function (type) {\n        return this.data.claims.find((0, claim_1.isOfType)(type));\n    };\n    IdentityMetadataWrapper.prototype.filterClaims = function (type) {\n        return this.data.claims.filter((0, claim_1.isOfType)(type));\n    };\n    return IdentityMetadataWrapper;\n}());\nexports.IdentityMetadataWrapper = IdentityMetadataWrapper;\n//# sourceMappingURL=metadata.js.map"]},"metadata":{},"sourceType":"script"}