{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Erc20Wrapper = void 0;\n\nvar BaseWrapper_1 = require(\"./BaseWrapper\");\n/**\n * ERC-20 contract only containing the non-optional functions\n */\n\n\nvar Erc20Wrapper =\n/** @class */\nfunction (_super) {\n  __extends(Erc20Wrapper, _super);\n\n  function Erc20Wrapper() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /**\n     * Querying allowance.\n     * @param from Account who has given the allowance.\n     * @param to Address of account to whom the allowance was given.\n     * @returns Amount of allowance.\n     */\n\n\n    _this.allowance = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.allowance, undefined, BaseWrapper_1.valueToBigNumber);\n    /**\n     * Returns the total supply of the token, that is, the amount of tokens currently minted.\n     * @returns Total supply.\n     */\n\n    _this.totalSupply = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.totalSupply, undefined, BaseWrapper_1.valueToBigNumber);\n    /**\n     * Approve a user to transfer the token on behalf of another user.\n     * @param spender The address which is being approved to spend the token.\n     * @param value The amount of the token approved to the spender.\n     * @return True if the transaction succeeds.\n     */\n\n    _this.approve = (0, BaseWrapper_1.proxySend)(_this.kit, _this.contract.methods.approve);\n    /**\n     * Transfers the token from one address to another.\n     * @param to The address to transfer the token to.\n     * @param value The amount of the token to transfer.\n     * @return True if the transaction succeeds.\n     */\n\n    _this.transfer = (0, BaseWrapper_1.proxySend)(_this.kit, _this.contract.methods.transfer);\n    /**\n     * Transfers the token from one address to another on behalf of a user.\n     * @param from The address to transfer the token from.\n     * @param to The address to transfer the token to.\n     * @param value The amount of the token to transfer.\n     * @return True if the transaction succeeds.\n     */\n\n    _this.transferFrom = (0, BaseWrapper_1.proxySend)(_this.kit, _this.contract.methods.transferFrom);\n    /**\n     * Gets the balance of the specified address.\n     * @param owner The address to query the balance of.\n     * @return The balance of the specified address.\n     */\n\n    _this.balanceOf = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.balanceOf, undefined, BaseWrapper_1.valueToBigNumber);\n    return _this;\n  }\n\n  return Erc20Wrapper;\n}(BaseWrapper_1.BaseWrapper);\n\nexports.Erc20Wrapper = Erc20Wrapper;","map":{"version":3,"sources":["../../src/wrappers/Erc20Wrapper.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,IAAA,aAAA,GAAA,OAAA,CAAA,eAAA,CAAA;AAEA;;AAEG;;;AACH,IAAA,YAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAoD,EAAA,SAAA,CAAA,YAAA,EAAA,MAAA,CAAA;;AAApD,WAAA,YAAA,GAAA;AAAA,QAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;AACE;;;;;AAKG;;;AACH,IAAA,KAAA,CAAA,SAAA,GAAY,CAAA,GAAA,aAAA,CAAA,SAAA,EAAU,KAAI,CAAC,QAAL,CAAc,OAAd,CAAsB,SAAhC,EAA2C,SAA3C,EAAsD,aAAA,CAAA,gBAAtD,CAAZ;AAEA;;;AAGG;;AACH,IAAA,KAAA,CAAA,WAAA,GAAc,CAAA,GAAA,aAAA,CAAA,SAAA,EAAU,KAAI,CAAC,QAAL,CAAc,OAAd,CAAsB,WAAhC,EAA6C,SAA7C,EAAwD,aAAA,CAAA,gBAAxD,CAAd;AAEA;;;;;AAKG;;AACH,IAAA,KAAA,CAAA,OAAA,GAAU,CAAA,GAAA,aAAA,CAAA,SAAA,EAAU,KAAI,CAAC,GAAf,EAAoB,KAAI,CAAC,QAAL,CAAc,OAAd,CAAsB,OAA1C,CAAV;AAEA;;;;;AAKG;;AACH,IAAA,KAAA,CAAA,QAAA,GAAW,CAAA,GAAA,aAAA,CAAA,SAAA,EAAU,KAAI,CAAC,GAAf,EAAoB,KAAI,CAAC,QAAL,CAAc,OAAd,CAAsB,QAA1C,CAAX;AAEA;;;;;;AAMG;;AACH,IAAA,KAAA,CAAA,YAAA,GAAe,CAAA,GAAA,aAAA,CAAA,SAAA,EAAU,KAAI,CAAC,GAAf,EAAoB,KAAI,CAAC,QAAL,CAAc,OAAd,CAAsB,YAA1C,CAAf;AAEA;;;;AAIG;;AACH,IAAA,KAAA,CAAA,SAAA,GAAmD,CAAA,GAAA,aAAA,CAAA,SAAA,EACjD,KAAI,CAAC,QAAL,CAAc,OAAd,CAAsB,SAD2B,EAEjD,SAFiD,EAGjD,aAAA,CAAA,gBAHiD,CAAnD;;AAKD;;AAAD,SAAA,YAAA;AAAC,CAlDD,CAAoD,aAAA,CAAA,WAApD,CAAA;;AAAa,OAAA,CAAA,YAAA,GAAA,YAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Erc20Wrapper = void 0;\nvar BaseWrapper_1 = require(\"./BaseWrapper\");\n/**\n * ERC-20 contract only containing the non-optional functions\n */\nvar Erc20Wrapper = /** @class */ (function (_super) {\n    __extends(Erc20Wrapper, _super);\n    function Erc20Wrapper() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Querying allowance.\n         * @param from Account who has given the allowance.\n         * @param to Address of account to whom the allowance was given.\n         * @returns Amount of allowance.\n         */\n        _this.allowance = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.allowance, undefined, BaseWrapper_1.valueToBigNumber);\n        /**\n         * Returns the total supply of the token, that is, the amount of tokens currently minted.\n         * @returns Total supply.\n         */\n        _this.totalSupply = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.totalSupply, undefined, BaseWrapper_1.valueToBigNumber);\n        /**\n         * Approve a user to transfer the token on behalf of another user.\n         * @param spender The address which is being approved to spend the token.\n         * @param value The amount of the token approved to the spender.\n         * @return True if the transaction succeeds.\n         */\n        _this.approve = (0, BaseWrapper_1.proxySend)(_this.kit, _this.contract.methods.approve);\n        /**\n         * Transfers the token from one address to another.\n         * @param to The address to transfer the token to.\n         * @param value The amount of the token to transfer.\n         * @return True if the transaction succeeds.\n         */\n        _this.transfer = (0, BaseWrapper_1.proxySend)(_this.kit, _this.contract.methods.transfer);\n        /**\n         * Transfers the token from one address to another on behalf of a user.\n         * @param from The address to transfer the token from.\n         * @param to The address to transfer the token to.\n         * @param value The amount of the token to transfer.\n         * @return True if the transaction succeeds.\n         */\n        _this.transferFrom = (0, BaseWrapper_1.proxySend)(_this.kit, _this.contract.methods.transferFrom);\n        /**\n         * Gets the balance of the specified address.\n         * @param owner The address to query the balance of.\n         * @return The balance of the specified address.\n         */\n        _this.balanceOf = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.balanceOf, undefined, BaseWrapper_1.valueToBigNumber);\n        return _this;\n    }\n    return Erc20Wrapper;\n}(BaseWrapper_1.BaseWrapper));\nexports.Erc20Wrapper = Erc20Wrapper;\n//# sourceMappingURL=Erc20Wrapper.js.map"]},"metadata":{},"sourceType":"script"}