{"ast":null,"code":"\"use strict\";\n\nvar _a;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CONNECTOR_TYPES = void 0;\n\nvar constants_1 = require(\"../constants\");\n\nvar connectors_1 = require(\"./connectors\");\n/**\n * Connectors for each wallet.\n */\n\n\nexports.CONNECTOR_TYPES = (_a = {}, _a[constants_1.WalletTypes.CeloExtensionWallet] = connectors_1.CeloExtensionWalletConnector, _a[constants_1.WalletTypes.Injected] = connectors_1.InjectedConnector, _a[constants_1.WalletTypes.Ledger] = connectors_1.LedgerConnector, _a[constants_1.WalletTypes.MetaMask] = connectors_1.MetaMaskConnector, _a[constants_1.WalletTypes.PrivateKey] = connectors_1.PrivateKeyConnector, _a[constants_1.WalletTypes.Unauthenticated] = connectors_1.UnauthenticatedConnector, _a[constants_1.WalletTypes.WalletConnect] = connectors_1.WalletConnectConnector, // TODO: only show these ones dynamically depending on the which wallets run on our blockchain (eip155:42220)\n_a[constants_1.WalletTypes.Valora] = connectors_1.WalletConnectConnector, _a[constants_1.WalletTypes.CeloDance] = connectors_1.WalletConnectConnector, _a[constants_1.WalletTypes.CeloTerminal] = connectors_1.WalletConnectConnector, _a[constants_1.WalletTypes.CeloWallet] = connectors_1.WalletConnectConnector, _a);","map":{"version":3,"sources":["../../src/connectors/connectors-by-name.ts"],"names":[],"mappings":";;;;;;;;;AAAA,IAAA,WAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;AAEA,IAAA,YAAA,GAAA,OAAA,CAAA,cAAA,CAAA;AAUA;;AAEG;;;AACU,OAAA,CAAA,eAAA,IAAe,EAAA,GAAA,EAAA,EAI1B,EAAA,CAAC,WAAA,CAAA,WAAA,CAAY,mBAAb,CAAA,GAAmC,YAAA,CAAA,4BAJT,EAK1B,EAAA,CAAC,WAAA,CAAA,WAAA,CAAY,QAAb,CAAA,GAAwB,YAAA,CAAA,iBALE,EAM1B,EAAA,CAAC,WAAA,CAAA,WAAA,CAAY,MAAb,CAAA,GAAsB,YAAA,CAAA,eANI,EAO1B,EAAA,CAAC,WAAA,CAAA,WAAA,CAAY,QAAb,CAAA,GAAwB,YAAA,CAAA,iBAPE,EAQ1B,EAAA,CAAC,WAAA,CAAA,WAAA,CAAY,UAAb,CAAA,GAA0B,YAAA,CAAA,mBARA,EAS1B,EAAA,CAAC,WAAA,CAAA,WAAA,CAAY,eAAb,CAAA,GAA+B,YAAA,CAAA,wBATL,EAU1B,EAAA,CAAC,WAAA,CAAA,WAAA,CAAY,aAAb,CAAA,GAA6B,YAAA,CAAA,sBAVH,EAW1B;AACA,EAAA,CAAC,WAAA,CAAA,WAAA,CAAY,MAAb,CAAA,GAAsB,YAAA,CAAA,sBAZI,EAa1B,EAAA,CAAC,WAAA,CAAA,WAAA,CAAY,SAAb,CAAA,GAAyB,YAAA,CAAA,sBAbC,EAc1B,EAAA,CAAC,WAAA,CAAA,WAAA,CAAY,YAAb,CAAA,GAA4B,YAAA,CAAA,sBAdF,EAe1B,EAAA,CAAC,WAAA,CAAA,WAAA,CAAY,UAAb,CAAA,GAA0B,YAAA,CAAA,sBAfA,EAgB1B,EAhBW","sourceRoot":"","sourcesContent":["\"use strict\";\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECTOR_TYPES = void 0;\nvar constants_1 = require(\"../constants\");\nvar connectors_1 = require(\"./connectors\");\n/**\n * Connectors for each wallet.\n */\nexports.CONNECTOR_TYPES = (_a = {},\n    _a[constants_1.WalletTypes.CeloExtensionWallet] = connectors_1.CeloExtensionWalletConnector,\n    _a[constants_1.WalletTypes.Injected] = connectors_1.InjectedConnector,\n    _a[constants_1.WalletTypes.Ledger] = connectors_1.LedgerConnector,\n    _a[constants_1.WalletTypes.MetaMask] = connectors_1.MetaMaskConnector,\n    _a[constants_1.WalletTypes.PrivateKey] = connectors_1.PrivateKeyConnector,\n    _a[constants_1.WalletTypes.Unauthenticated] = connectors_1.UnauthenticatedConnector,\n    _a[constants_1.WalletTypes.WalletConnect] = connectors_1.WalletConnectConnector,\n    // TODO: only show these ones dynamically depending on the which wallets run on our blockchain (eip155:42220)\n    _a[constants_1.WalletTypes.Valora] = connectors_1.WalletConnectConnector,\n    _a[constants_1.WalletTypes.CeloDance] = connectors_1.WalletConnectConnector,\n    _a[constants_1.WalletTypes.CeloTerminal] = connectors_1.WalletConnectConnector,\n    _a[constants_1.WalletTypes.CeloWallet] = connectors_1.WalletConnectConnector,\n    _a);\n//# sourceMappingURL=connectors-by-name.js.map"]},"metadata":{},"sourceType":"script"}