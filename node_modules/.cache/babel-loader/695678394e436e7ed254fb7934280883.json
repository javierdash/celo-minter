{"ast":null,"code":"var _jsxFileName = \"/Users/Lucy/PROYECTOS/celo-react-boilerplate/src/components/Counter.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Card, Button } from \"react-bootstrap\";\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\nimport { increaseCount, decreaseCount, getCount } from \"../utils/counter\";\nimport Loader from \"./ui/Loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Counter = _ref => {\n  _s();\n\n  let {\n    counterContract\n  } = _ref;\n  const [loading, setLoading] = useState(false);\n  const [count, setCount] = useState(0);\n  const {\n    performActions\n  } = useContractKit();\n  useEffect(() => {\n    try {\n      if (counterContract) {\n        updateCount();\n      }\n    } catch (error) {\n      console.log({\n        error\n      });\n    }\n  }, [counterContract, getCount]);\n\n  const increment = async () => {\n    try {\n      setLoading(true);\n      await increaseCount(counterContract, performActions);\n      await updateCount();\n    } catch (e) {\n      console.log({\n        e\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const decrement = async () => {\n    try {\n      setLoading(true);\n      await decreaseCount(counterContract, performActions);\n      await updateCount();\n    } catch (e) {\n      console.log({\n        e\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const updateCount = async () => {\n    try {\n      setLoading(true);\n      const value = await getCount(counterContract);\n      setCount(value);\n    } catch (e) {\n      console.log({\n        e\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"text-center w-50 m-auto\",\n    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n      children: \"Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        children: [\"Count: \", count]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), !loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-grid gap-2 d-md-block\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"m-2\",\n          variant: \"dark\",\n          size: \"lg\",\n          onClick: increment,\n          children: \"Increase Count\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"m-2\",\n          variant: \"outline-dark\",\n          disabled: count < 1,\n          size: \"lg\",\n          onClick: decrement,\n          children: \"Decrease Count\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Counter, \"CkXYKCAOGQh9WsNCxsZen9qi/4I=\", false, function () {\n  return [useContractKit];\n});\n\n_c = Counter;\nexport default Counter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"sources":["/Users/Lucy/PROYECTOS/celo-react-boilerplate/src/components/Counter.js"],"names":["React","useState","useEffect","Card","Button","useContractKit","increaseCount","decreaseCount","getCount","Loader","Counter","counterContract","loading","setLoading","count","setCount","performActions","updateCount","error","console","log","increment","e","decrement","value"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\"\nimport {Card, Button} from \"react-bootstrap\";\nimport {useContractKit} from \"@celo-tools/use-contractkit\";\nimport {increaseCount, decreaseCount, getCount} from \"../utils/counter\";\nimport Loader from \"./ui/Loader\";\n\nconst Counter = ({counterContract}) => {\n    const [loading, setLoading] = useState(false);\n    const [count, setCount] = useState(0);\n    const {performActions} = useContractKit();\n\n    useEffect(() => {\n        try {\n            if (counterContract) {\n                updateCount()\n            }\n        } catch (error) {\n            console.log({error});\n        }\n    }, [counterContract, getCount]);\n\n    const increment = async () => {\n        try {\n\n            setLoading(true)\n            await increaseCount(counterContract, performActions);\n            await updateCount()\n\n        } catch (e) {\n            console.log({e})\n        } finally {\n            setLoading(false)\n        }\n    };\n\n    const decrement = async () => {\n\n\n        try {\n            setLoading(true)\n            await decreaseCount(counterContract, performActions);\n\n            await updateCount()\n        } catch (e) {\n            console.log({e})\n        } finally {\n            setLoading(false)\n        }\n    };\n\n    const updateCount = async () => {\n        try {\n\n            setLoading(true)\n            const value = await getCount(counterContract)\n            setCount(value)\n        } catch (e) {\n            console.log({e})\n        } finally {\n            setLoading(false)\n        }\n    };\n    return (\n\n        <Card className=\"text-center w-50 m-auto\">\n            <Card.Header>Counter</Card.Header>\n            <Card.Body className=\"mt-4\">\n                <Card.Title>Count: {count}</Card.Title>\n                <br/>\n\n                {!loading\n                    ?\n                    <div className=\"d-grid gap-2 d-md-block\">\n                        <Button className=\"m-2\" variant=\"dark\" size=\"lg\" onClick={increment}>\n                            Increase Count\n                        </Button>\n                        <Button\n                            className=\"m-2\"\n                            variant=\"outline-dark\"\n                            disabled={count < 1}\n                            size=\"lg\"\n                            onClick={decrement}\n                        >\n                            Decrease Count\n                        </Button>\n                    </div>\n                    :\n                    <Loader/>\n                }\n\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default Counter;\n"]},"metadata":{},"sourceType":"module"}