{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SortedOraclesWrapper = exports.MedianRelation = void 0;\n\nvar address_1 = require(\"@celo/base/lib/address\");\n\nvar connect_1 = require(\"@celo/connect\");\n\nvar address_2 = require(\"@celo/utils/lib/address\");\n\nvar fixidity_1 = require(\"@celo/utils/lib/fixidity\");\n\nvar base_1 = require(\"../base\");\n\nvar celo_tokens_1 = require(\"../celo-tokens\");\n\nvar BaseWrapper_1 = require(\"./BaseWrapper\");\n\nvar MedianRelation;\n\n(function (MedianRelation) {\n  MedianRelation[MedianRelation[\"Undefined\"] = 0] = \"Undefined\";\n  MedianRelation[MedianRelation[\"Lesser\"] = 1] = \"Lesser\";\n  MedianRelation[MedianRelation[\"Greater\"] = 2] = \"Greater\";\n  MedianRelation[MedianRelation[\"Equal\"] = 3] = \"Equal\";\n})(MedianRelation = exports.MedianRelation || (exports.MedianRelation = {}));\n/**\n * Currency price oracle contract.\n */\n\n\nvar SortedOraclesWrapper =\n/** @class */\nfunction (_super) {\n  __extends(SortedOraclesWrapper, _super);\n\n  function SortedOraclesWrapper() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /**\n     * Returns the report expiry parameter.\n     * @returns Current report expiry.\n     */\n\n\n    _this.reportExpirySeconds = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.reportExpirySeconds, undefined, BaseWrapper_1.valueToBigNumber);\n    /**\n     * Helper function to get the rates for StableToken, by passing the address\n     * of StableToken to `getRates`.\n     */\n\n    _this.getStableTokenRates = function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n          return [2\n          /*return*/\n          , this.getRates(base_1.CeloContract.StableToken)\n          /**\n           * Gets all elements from the doubly linked list.\n           * @param target The ReportTarget, either CeloToken or currency pair in question\n           * @return An unpacked list of elements from largest to smallest.\n           */\n          ];\n        });\n      });\n    };\n\n    return _this;\n  }\n  /**\n   * Gets the number of rates that have been reported for the given target\n   * @param target The ReportTarget, either CeloToken or currency pair\n   * @return The number of reported oracle rates for `token`.\n   */\n\n\n  SortedOraclesWrapper.prototype.numRates = function (target) {\n    return __awaiter(this, void 0, void 0, function () {\n      var identifier, response;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.toCurrencyPairIdentifier(target)];\n\n          case 1:\n            identifier = _a.sent();\n            return [4\n            /*yield*/\n            , this.contract.methods.numRates(identifier).call()];\n\n          case 2:\n            response = _a.sent();\n            return [2\n            /*return*/\n            , (0, BaseWrapper_1.valueToInt)(response)];\n        }\n      });\n    });\n  };\n  /**\n   * Returns the median rate for the given target\n   * @param target The ReportTarget, either CeloToken or currency pair\n   * @return The median exchange rate for `token`, expressed as:\n   *   amount of that token / equivalent amount in CELO\n   */\n\n\n  SortedOraclesWrapper.prototype.medianRate = function (target) {\n    return __awaiter(this, void 0, void 0, function () {\n      var identifier, response;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.toCurrencyPairIdentifier(target)];\n\n          case 1:\n            identifier = _a.sent();\n            return [4\n            /*yield*/\n            , this.contract.methods.medianRate(identifier).call()];\n\n          case 2:\n            response = _a.sent();\n            return [2\n            /*return*/\n            , {\n              rate: (0, BaseWrapper_1.valueToFrac)(response[0], response[1])\n            }];\n        }\n      });\n    });\n  };\n  /**\n   * Checks if the given address is whitelisted as an oracle for the target\n   * @param target The ReportTarget, either CeloToken or currency pair\n   * @param oracle The address that we're checking the oracle status of\n   * @returns boolean describing whether this account is an oracle\n   */\n\n\n  SortedOraclesWrapper.prototype.isOracle = function (target, oracle) {\n    return __awaiter(this, void 0, void 0, function () {\n      var identifier;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.toCurrencyPairIdentifier(target)];\n\n          case 1:\n            identifier = _a.sent();\n            return [2\n            /*return*/\n            , this.contract.methods.isOracle(identifier, oracle).call()];\n        }\n      });\n    });\n  };\n  /**\n   * Returns the list of whitelisted oracles for a given target\n   * @param target The ReportTarget, either CeloToken or currency pair\n   * @returns The list of whitelisted oracles for a given token.\n   */\n\n\n  SortedOraclesWrapper.prototype.getOracles = function (target) {\n    return __awaiter(this, void 0, void 0, function () {\n      var identifier;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.toCurrencyPairIdentifier(target)];\n\n          case 1:\n            identifier = _a.sent();\n            return [2\n            /*return*/\n            , this.contract.methods.getOracles(identifier).call()];\n        }\n      });\n    });\n  };\n  /**\n   * Returns the expiry for the target if exists, if not the default.\n   * @param target The ReportTarget, either CeloToken or currency pair\n   * @return The report expiry in seconds.\n   */\n\n\n  SortedOraclesWrapper.prototype.getTokenReportExpirySeconds = function (target) {\n    return __awaiter(this, void 0, void 0, function () {\n      var identifier, response;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.toCurrencyPairIdentifier(target)];\n\n          case 1:\n            identifier = _a.sent();\n            return [4\n            /*yield*/\n            , this.contract.methods.getTokenReportExpirySeconds(identifier).call()];\n\n          case 2:\n            response = _a.sent();\n            return [2\n            /*return*/\n            , (0, BaseWrapper_1.valueToBigNumber)(response)];\n        }\n      });\n    });\n  };\n  /**\n   * Checks if the oldest report for a given target is expired\n   * @param target The ReportTarget, either CeloToken or currency pair\n   */\n\n\n  SortedOraclesWrapper.prototype.isOldestReportExpired = function (target) {\n    return __awaiter(this, void 0, void 0, function () {\n      var identifier, response;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.toCurrencyPairIdentifier(target)];\n\n          case 1:\n            identifier = _a.sent();\n            return [4\n            /*yield*/\n            , this.contract.methods.isOldestReportExpired(identifier).call()];\n\n          case 2:\n            response = _a.sent();\n            return [2\n            /*return*/\n            , response];\n        }\n      });\n    });\n  };\n  /**\n   * Removes expired reports, if any exist\n   * @param target The ReportTarget, either CeloToken or currency pair\n   * @param numReports The upper-limit of reports to remove. For example, if there\n   * are 2 expired reports, and this param is 5, it will only remove the 2 that\n   * are expired.\n   */\n\n\n  SortedOraclesWrapper.prototype.removeExpiredReports = function (target, numReports) {\n    return __awaiter(this, void 0, void 0, function () {\n      var identifier;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.toCurrencyPairIdentifier(target)];\n\n          case 1:\n            identifier = _a.sent();\n            if (!!numReports) return [3\n            /*break*/\n            , 3];\n            return [4\n            /*yield*/\n            , this.getReports(target)];\n\n          case 2:\n            numReports = _a.sent().length - 1;\n            _a.label = 3;\n\n          case 3:\n            return [2\n            /*return*/\n            , (0, connect_1.toTransactionObject)(this.kit.connection, this.contract.methods.removeExpiredReports(identifier, numReports))];\n        }\n      });\n    });\n  };\n  /**\n   * Updates an oracle value and the median.\n   * @param target The ReportTarget, either CeloToken or currency pair\n   * @param value The amount of `token` equal to one CELO.\n   */\n\n\n  SortedOraclesWrapper.prototype.report = function (target, value, oracleAddress) {\n    return __awaiter(this, void 0, void 0, function () {\n      var identifier, fixedValue, _a, lesserKey, greaterKey;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.toCurrencyPairIdentifier(target)];\n\n          case 1:\n            identifier = _b.sent();\n            fixedValue = (0, fixidity_1.toFixed)((0, BaseWrapper_1.valueToBigNumber)(value));\n            return [4\n            /*yield*/\n            , this.findLesserAndGreaterKeys(target, (0, BaseWrapper_1.valueToBigNumber)(value), oracleAddress)];\n\n          case 2:\n            _a = _b.sent(), lesserKey = _a.lesserKey, greaterKey = _a.greaterKey;\n            return [2\n            /*return*/\n            , (0, connect_1.toTransactionObject)(this.kit.connection, this.contract.methods.report(identifier, fixedValue.toFixed(), lesserKey, greaterKey), {\n              from: oracleAddress\n            })];\n        }\n      });\n    });\n  };\n  /**\n   * Updates an oracle value and the median.\n   * @param value The amount of US Dollars equal to one CELO.\n   * @param oracleAddress The address to report as\n   * @param token The token to report for\n   */\n\n\n  SortedOraclesWrapper.prototype.reportStableToken = function (value, oracleAddress, token) {\n    if (token === void 0) {\n      token = celo_tokens_1.StableToken.cUSD;\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , this.report(this.kit.celoTokens.getContract(token), value, oracleAddress)];\n      });\n    });\n  };\n  /**\n   * Returns current configuration parameters.\n   */\n\n\n  SortedOraclesWrapper.prototype.getConfig = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _a = {};\n            return [4\n            /*yield*/\n            , this.reportExpirySeconds()];\n\n          case 1:\n            return [2\n            /*return*/\n            , (_a.reportExpirySeconds = _b.sent(), _a)];\n        }\n      });\n    });\n  };\n  /**\n   * @dev Returns human readable configuration of the sortedoracles contract\n   * @return SortedOraclesConfig object\n   */\n\n\n  SortedOraclesWrapper.prototype.getHumanReadableConfig = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var config;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.getConfig()];\n\n          case 1:\n            config = _a.sent();\n            return [2\n            /*return*/\n            , {\n              reportExpiry: (0, BaseWrapper_1.secondsToDurationString)(config.reportExpirySeconds)\n            }];\n        }\n      });\n    });\n  };\n  /**\n   * Gets all elements from the doubly linked list.\n   * @param target The ReportTarget, either CeloToken or currency pair in question\n   * @return An unpacked list of elements from largest to smallest.\n   */\n\n\n  SortedOraclesWrapper.prototype.getRates = function (target) {\n    return __awaiter(this, void 0, void 0, function () {\n      var identifier, response, rates, i, medRelIndex;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.toCurrencyPairIdentifier(target)];\n\n          case 1:\n            identifier = _a.sent();\n            return [4\n            /*yield*/\n            , this.contract.methods.getRates(identifier).call()];\n\n          case 2:\n            response = _a.sent();\n            rates = [];\n\n            for (i = 0; i < response[0].length; i++) {\n              medRelIndex = parseInt(response[2][i], 10);\n              rates.push({\n                address: response[0][i],\n                rate: (0, fixidity_1.fromFixed)((0, BaseWrapper_1.valueToBigNumber)(response[1][i])),\n                medianRelation: medRelIndex\n              });\n            }\n\n            return [2\n            /*return*/\n            , rates];\n        }\n      });\n    });\n  };\n  /**\n   * Gets all elements from the doubly linked list.\n   * @param target The ReportTarget, either CeloToken or currency pair in question\n   * @return An unpacked list of elements from largest to smallest.\n   */\n\n\n  SortedOraclesWrapper.prototype.getTimestamps = function (target) {\n    return __awaiter(this, void 0, void 0, function () {\n      var identifier, response, timestamps, i, medRelIndex;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.toCurrencyPairIdentifier(target)];\n\n          case 1:\n            identifier = _a.sent();\n            return [4\n            /*yield*/\n            , this.contract.methods.getTimestamps(identifier).call()];\n\n          case 2:\n            response = _a.sent();\n            timestamps = [];\n\n            for (i = 0; i < response[0].length; i++) {\n              medRelIndex = parseInt(response[2][i], 10);\n              timestamps.push({\n                address: response[0][i],\n                timestamp: (0, BaseWrapper_1.valueToBigNumber)(response[1][i]),\n                medianRelation: medRelIndex\n              });\n            }\n\n            return [2\n            /*return*/\n            , timestamps];\n        }\n      });\n    });\n  };\n\n  SortedOraclesWrapper.prototype.getReports = function (target) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, rates, timestamps, reports, _loop_1, _i, rates_1, rate;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , Promise.all([this.getRates(target), this.getTimestamps(target)])];\n\n          case 1:\n            _a = _b.sent(), rates = _a[0], timestamps = _a[1];\n            reports = [];\n\n            _loop_1 = function (rate) {\n              var match = timestamps.filter(function (t) {\n                return (0, address_1.eqAddress)(t.address, rate.address);\n              });\n              reports.push({\n                address: rate.address,\n                rate: rate.rate,\n                timestamp: match[0].timestamp\n              });\n            };\n\n            for (_i = 0, rates_1 = rates; _i < rates_1.length; _i++) {\n              rate = rates_1[_i];\n\n              _loop_1(rate);\n            }\n\n            return [2\n            /*return*/\n            , reports];\n        }\n      });\n    });\n  };\n\n  SortedOraclesWrapper.prototype.findLesserAndGreaterKeys = function (target, value, oracleAddress) {\n    return __awaiter(this, void 0, void 0, function () {\n      var currentRates, greaterKey, lesserKey, _i, currentRates_1, rate;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.getRates(target)];\n\n          case 1:\n            currentRates = _a.sent();\n            greaterKey = address_1.NULL_ADDRESS;\n            lesserKey = address_1.NULL_ADDRESS; // This leverages the fact that the currentRates are already sorted from\n            // greatest to lowest value\n\n            for (_i = 0, currentRates_1 = currentRates; _i < currentRates_1.length; _i++) {\n              rate = currentRates_1[_i];\n\n              if (!(0, address_1.eqAddress)(rate.address, oracleAddress)) {\n                if (rate.rate.isLessThanOrEqualTo(value)) {\n                  lesserKey = rate.address;\n                  break;\n                }\n\n                greaterKey = rate.address;\n              }\n            }\n\n            return [2\n            /*return*/\n            , {\n              lesserKey: lesserKey,\n              greaterKey: greaterKey\n            }];\n        }\n      });\n    });\n  };\n\n  SortedOraclesWrapper.prototype.toCurrencyPairIdentifier = function (target) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        if (this.kit.celoTokens.isStableTokenContract(target)) {\n          return [2\n          /*return*/\n          , this.kit.registry.addressFor(target)];\n        } else if ((0, address_2.isValidAddress)(target)) {\n          return [2\n          /*return*/\n          , target];\n        } else {\n          throw new Error(target + \" is not StableTokenContract deployed or a valid Address\");\n        }\n\n        return [2\n        /*return*/\n        ];\n      });\n    });\n  };\n\n  return SortedOraclesWrapper;\n}(BaseWrapper_1.BaseWrapper);\n\nexports.SortedOraclesWrapper = SortedOraclesWrapper;","map":{"version":3,"sources":["../../src/wrappers/SortedOracles.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SortedOraclesWrapper = exports.MedianRelation = void 0;\nvar address_1 = require(\"@celo/base/lib/address\");\nvar connect_1 = require(\"@celo/connect\");\nvar address_2 = require(\"@celo/utils/lib/address\");\nvar fixidity_1 = require(\"@celo/utils/lib/fixidity\");\nvar base_1 = require(\"../base\");\nvar celo_tokens_1 = require(\"../celo-tokens\");\nvar BaseWrapper_1 = require(\"./BaseWrapper\");\nvar MedianRelation;\n(function (MedianRelation) {\n    MedianRelation[MedianRelation[\"Undefined\"] = 0] = \"Undefined\";\n    MedianRelation[MedianRelation[\"Lesser\"] = 1] = \"Lesser\";\n    MedianRelation[MedianRelation[\"Greater\"] = 2] = \"Greater\";\n    MedianRelation[MedianRelation[\"Equal\"] = 3] = \"Equal\";\n})(MedianRelation = exports.MedianRelation || (exports.MedianRelation = {}));\n/**\n * Currency price oracle contract.\n */\nvar SortedOraclesWrapper = /** @class */ (function (_super) {\n    __extends(SortedOraclesWrapper, _super);\n    function SortedOraclesWrapper() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Returns the report expiry parameter.\n         * @returns Current report expiry.\n         */\n        _this.reportExpirySeconds = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.reportExpirySeconds, undefined, BaseWrapper_1.valueToBigNumber);\n        /**\n         * Helper function to get the rates for StableToken, by passing the address\n         * of StableToken to `getRates`.\n         */\n        _this.getStableTokenRates = function () { return __awaiter(_this, void 0, void 0, function () { return __generator(this, function (_a) {\n            return [2 /*return*/, this.getRates(base_1.CeloContract.StableToken)\n                /**\n                 * Gets all elements from the doubly linked list.\n                 * @param target The ReportTarget, either CeloToken or currency pair in question\n                 * @return An unpacked list of elements from largest to smallest.\n                 */\n            ];\n        }); }); };\n        return _this;\n    }\n    /**\n     * Gets the number of rates that have been reported for the given target\n     * @param target The ReportTarget, either CeloToken or currency pair\n     * @return The number of reported oracle rates for `token`.\n     */\n    SortedOraclesWrapper.prototype.numRates = function (target) {\n        return __awaiter(this, void 0, void 0, function () {\n            var identifier, response;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.toCurrencyPairIdentifier(target)];\n                    case 1:\n                        identifier = _a.sent();\n                        return [4 /*yield*/, this.contract.methods.numRates(identifier).call()];\n                    case 2:\n                        response = _a.sent();\n                        return [2 /*return*/, (0, BaseWrapper_1.valueToInt)(response)];\n                }\n            });\n        });\n    };\n    /**\n     * Returns the median rate for the given target\n     * @param target The ReportTarget, either CeloToken or currency pair\n     * @return The median exchange rate for `token`, expressed as:\n     *   amount of that token / equivalent amount in CELO\n     */\n    SortedOraclesWrapper.prototype.medianRate = function (target) {\n        return __awaiter(this, void 0, void 0, function () {\n            var identifier, response;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.toCurrencyPairIdentifier(target)];\n                    case 1:\n                        identifier = _a.sent();\n                        return [4 /*yield*/, this.contract.methods.medianRate(identifier).call()];\n                    case 2:\n                        response = _a.sent();\n                        return [2 /*return*/, {\n                                rate: (0, BaseWrapper_1.valueToFrac)(response[0], response[1]),\n                            }];\n                }\n            });\n        });\n    };\n    /**\n     * Checks if the given address is whitelisted as an oracle for the target\n     * @param target The ReportTarget, either CeloToken or currency pair\n     * @param oracle The address that we're checking the oracle status of\n     * @returns boolean describing whether this account is an oracle\n     */\n    SortedOraclesWrapper.prototype.isOracle = function (target, oracle) {\n        return __awaiter(this, void 0, void 0, function () {\n            var identifier;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.toCurrencyPairIdentifier(target)];\n                    case 1:\n                        identifier = _a.sent();\n                        return [2 /*return*/, this.contract.methods.isOracle(identifier, oracle).call()];\n                }\n            });\n        });\n    };\n    /**\n     * Returns the list of whitelisted oracles for a given target\n     * @param target The ReportTarget, either CeloToken or currency pair\n     * @returns The list of whitelisted oracles for a given token.\n     */\n    SortedOraclesWrapper.prototype.getOracles = function (target) {\n        return __awaiter(this, void 0, void 0, function () {\n            var identifier;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.toCurrencyPairIdentifier(target)];\n                    case 1:\n                        identifier = _a.sent();\n                        return [2 /*return*/, this.contract.methods.getOracles(identifier).call()];\n                }\n            });\n        });\n    };\n    /**\n     * Returns the expiry for the target if exists, if not the default.\n     * @param target The ReportTarget, either CeloToken or currency pair\n     * @return The report expiry in seconds.\n     */\n    SortedOraclesWrapper.prototype.getTokenReportExpirySeconds = function (target) {\n        return __awaiter(this, void 0, void 0, function () {\n            var identifier, response;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.toCurrencyPairIdentifier(target)];\n                    case 1:\n                        identifier = _a.sent();\n                        return [4 /*yield*/, this.contract.methods.getTokenReportExpirySeconds(identifier).call()];\n                    case 2:\n                        response = _a.sent();\n                        return [2 /*return*/, (0, BaseWrapper_1.valueToBigNumber)(response)];\n                }\n            });\n        });\n    };\n    /**\n     * Checks if the oldest report for a given target is expired\n     * @param target The ReportTarget, either CeloToken or currency pair\n     */\n    SortedOraclesWrapper.prototype.isOldestReportExpired = function (target) {\n        return __awaiter(this, void 0, void 0, function () {\n            var identifier, response;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.toCurrencyPairIdentifier(target)];\n                    case 1:\n                        identifier = _a.sent();\n                        return [4 /*yield*/, this.contract.methods.isOldestReportExpired(identifier).call()];\n                    case 2:\n                        response = _a.sent();\n                        return [2 /*return*/, response];\n                }\n            });\n        });\n    };\n    /**\n     * Removes expired reports, if any exist\n     * @param target The ReportTarget, either CeloToken or currency pair\n     * @param numReports The upper-limit of reports to remove. For example, if there\n     * are 2 expired reports, and this param is 5, it will only remove the 2 that\n     * are expired.\n     */\n    SortedOraclesWrapper.prototype.removeExpiredReports = function (target, numReports) {\n        return __awaiter(this, void 0, void 0, function () {\n            var identifier;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.toCurrencyPairIdentifier(target)];\n                    case 1:\n                        identifier = _a.sent();\n                        if (!!numReports) return [3 /*break*/, 3];\n                        return [4 /*yield*/, this.getReports(target)];\n                    case 2:\n                        numReports = (_a.sent()).length - 1;\n                        _a.label = 3;\n                    case 3: return [2 /*return*/, (0, connect_1.toTransactionObject)(this.kit.connection, this.contract.methods.removeExpiredReports(identifier, numReports))];\n                }\n            });\n        });\n    };\n    /**\n     * Updates an oracle value and the median.\n     * @param target The ReportTarget, either CeloToken or currency pair\n     * @param value The amount of `token` equal to one CELO.\n     */\n    SortedOraclesWrapper.prototype.report = function (target, value, oracleAddress) {\n        return __awaiter(this, void 0, void 0, function () {\n            var identifier, fixedValue, _a, lesserKey, greaterKey;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0: return [4 /*yield*/, this.toCurrencyPairIdentifier(target)];\n                    case 1:\n                        identifier = _b.sent();\n                        fixedValue = (0, fixidity_1.toFixed)((0, BaseWrapper_1.valueToBigNumber)(value));\n                        return [4 /*yield*/, this.findLesserAndGreaterKeys(target, (0, BaseWrapper_1.valueToBigNumber)(value), oracleAddress)];\n                    case 2:\n                        _a = _b.sent(), lesserKey = _a.lesserKey, greaterKey = _a.greaterKey;\n                        return [2 /*return*/, (0, connect_1.toTransactionObject)(this.kit.connection, this.contract.methods.report(identifier, fixedValue.toFixed(), lesserKey, greaterKey), { from: oracleAddress })];\n                }\n            });\n        });\n    };\n    /**\n     * Updates an oracle value and the median.\n     * @param value The amount of US Dollars equal to one CELO.\n     * @param oracleAddress The address to report as\n     * @param token The token to report for\n     */\n    SortedOraclesWrapper.prototype.reportStableToken = function (value, oracleAddress, token) {\n        if (token === void 0) { token = celo_tokens_1.StableToken.cUSD; }\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.report(this.kit.celoTokens.getContract(token), value, oracleAddress)];\n            });\n        });\n    };\n    /**\n     * Returns current configuration parameters.\n     */\n    SortedOraclesWrapper.prototype.getConfig = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = {};\n                        return [4 /*yield*/, this.reportExpirySeconds()];\n                    case 1: return [2 /*return*/, (_a.reportExpirySeconds = _b.sent(),\n                            _a)];\n                }\n            });\n        });\n    };\n    /**\n     * @dev Returns human readable configuration of the sortedoracles contract\n     * @return SortedOraclesConfig object\n     */\n    SortedOraclesWrapper.prototype.getHumanReadableConfig = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var config;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getConfig()];\n                    case 1:\n                        config = _a.sent();\n                        return [2 /*return*/, {\n                                reportExpiry: (0, BaseWrapper_1.secondsToDurationString)(config.reportExpirySeconds),\n                            }];\n                }\n            });\n        });\n    };\n    /**\n     * Gets all elements from the doubly linked list.\n     * @param target The ReportTarget, either CeloToken or currency pair in question\n     * @return An unpacked list of elements from largest to smallest.\n     */\n    SortedOraclesWrapper.prototype.getRates = function (target) {\n        return __awaiter(this, void 0, void 0, function () {\n            var identifier, response, rates, i, medRelIndex;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.toCurrencyPairIdentifier(target)];\n                    case 1:\n                        identifier = _a.sent();\n                        return [4 /*yield*/, this.contract.methods.getRates(identifier).call()];\n                    case 2:\n                        response = _a.sent();\n                        rates = [];\n                        for (i = 0; i < response[0].length; i++) {\n                            medRelIndex = parseInt(response[2][i], 10);\n                            rates.push({\n                                address: response[0][i],\n                                rate: (0, fixidity_1.fromFixed)((0, BaseWrapper_1.valueToBigNumber)(response[1][i])),\n                                medianRelation: medRelIndex,\n                            });\n                        }\n                        return [2 /*return*/, rates];\n                }\n            });\n        });\n    };\n    /**\n     * Gets all elements from the doubly linked list.\n     * @param target The ReportTarget, either CeloToken or currency pair in question\n     * @return An unpacked list of elements from largest to smallest.\n     */\n    SortedOraclesWrapper.prototype.getTimestamps = function (target) {\n        return __awaiter(this, void 0, void 0, function () {\n            var identifier, response, timestamps, i, medRelIndex;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.toCurrencyPairIdentifier(target)];\n                    case 1:\n                        identifier = _a.sent();\n                        return [4 /*yield*/, this.contract.methods.getTimestamps(identifier).call()];\n                    case 2:\n                        response = _a.sent();\n                        timestamps = [];\n                        for (i = 0; i < response[0].length; i++) {\n                            medRelIndex = parseInt(response[2][i], 10);\n                            timestamps.push({\n                                address: response[0][i],\n                                timestamp: (0, BaseWrapper_1.valueToBigNumber)(response[1][i]),\n                                medianRelation: medRelIndex,\n                            });\n                        }\n                        return [2 /*return*/, timestamps];\n                }\n            });\n        });\n    };\n    SortedOraclesWrapper.prototype.getReports = function (target) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, rates, timestamps, reports, _loop_1, _i, rates_1, rate;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0: return [4 /*yield*/, Promise.all([\n                            this.getRates(target),\n                            this.getTimestamps(target),\n                        ])];\n                    case 1:\n                        _a = _b.sent(), rates = _a[0], timestamps = _a[1];\n                        reports = [];\n                        _loop_1 = function (rate) {\n                            var match = timestamps.filter(function (t) { return (0, address_1.eqAddress)(t.address, rate.address); });\n                            reports.push({ address: rate.address, rate: rate.rate, timestamp: match[0].timestamp });\n                        };\n                        for (_i = 0, rates_1 = rates; _i < rates_1.length; _i++) {\n                            rate = rates_1[_i];\n                            _loop_1(rate);\n                        }\n                        return [2 /*return*/, reports];\n                }\n            });\n        });\n    };\n    SortedOraclesWrapper.prototype.findLesserAndGreaterKeys = function (target, value, oracleAddress) {\n        return __awaiter(this, void 0, void 0, function () {\n            var currentRates, greaterKey, lesserKey, _i, currentRates_1, rate;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getRates(target)];\n                    case 1:\n                        currentRates = _a.sent();\n                        greaterKey = address_1.NULL_ADDRESS;\n                        lesserKey = address_1.NULL_ADDRESS;\n                        // This leverages the fact that the currentRates are already sorted from\n                        // greatest to lowest value\n                        for (_i = 0, currentRates_1 = currentRates; _i < currentRates_1.length; _i++) {\n                            rate = currentRates_1[_i];\n                            if (!(0, address_1.eqAddress)(rate.address, oracleAddress)) {\n                                if (rate.rate.isLessThanOrEqualTo(value)) {\n                                    lesserKey = rate.address;\n                                    break;\n                                }\n                                greaterKey = rate.address;\n                            }\n                        }\n                        return [2 /*return*/, { lesserKey: lesserKey, greaterKey: greaterKey }];\n                }\n            });\n        });\n    };\n    SortedOraclesWrapper.prototype.toCurrencyPairIdentifier = function (target) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                if (this.kit.celoTokens.isStableTokenContract(target)) {\n                    return [2 /*return*/, this.kit.registry.addressFor(target)];\n                }\n                else if ((0, address_2.isValidAddress)(target)) {\n                    return [2 /*return*/, target];\n                }\n                else {\n                    throw new Error(target + \" is not StableTokenContract deployed or a valid Address\");\n                }\n                return [2 /*return*/];\n            });\n        });\n    };\n    return SortedOraclesWrapper;\n}(BaseWrapper_1.BaseWrapper));\nexports.SortedOraclesWrapper = SortedOraclesWrapper;\n//# sourceMappingURL=SortedOracles.js.map"]},"metadata":{},"sourceType":"script"}