{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LockedGoldWrapper = void 0;\n\nvar collections_1 = require(\"@celo/base/lib/collections\");\n\nvar bignumber_js_1 = __importDefault(require(\"bignumber.js\"));\n\nvar BaseWrapper_1 = require(\"../wrappers/BaseWrapper\");\n\nvar bigNumberComparator = function (a, b) {\n  return a.lt(b);\n};\n\nfunction linkedListChanges(groups, changed) {\n  return (0, collections_1.linkedListChanges)(groups, changed, bigNumberComparator);\n}\n/**\n * Contract for handling deposits needed for voting.\n */\n\n\nvar LockedGoldWrapper =\n/** @class */\nfunction (_super) {\n  __extends(LockedGoldWrapper, _super);\n\n  function LockedGoldWrapper() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /**\n     * Withdraws a gold that has been unlocked after the unlocking period has passed.\n     * @param index The index of the pending withdrawal to withdraw.\n     */\n\n\n    _this.withdraw = (0, BaseWrapper_1.proxySend)(_this.kit, _this.contract.methods.withdraw);\n    /**\n     * Locks gold to be used for voting.\n     * The gold to be locked, must be specified as the `tx.value`\n     */\n\n    _this.lock = (0, BaseWrapper_1.proxySend)(_this.kit, _this.contract.methods.lock);\n    /**\n     * Unlocks gold that becomes withdrawable after the unlocking period.\n     * @param value The amount of gold to unlock.\n     */\n\n    _this.unlock = (0, BaseWrapper_1.proxySend)(_this.kit, _this.contract.methods.unlock, (0, BaseWrapper_1.tupleParser)(BaseWrapper_1.valueToString));\n    /**\n     * Relocks gold that has been unlocked but not withdrawn.\n     * @param index The index of the pending withdrawal to relock from.\n     * @param value The value to relock from the specified pending withdrawal.\n     */\n\n    _this._relock = (0, BaseWrapper_1.proxySend)(_this.kit, _this.contract.methods.relock, (0, BaseWrapper_1.tupleParser)(BaseWrapper_1.valueToString, BaseWrapper_1.valueToString));\n    /**\n     * Returns the total amount of locked gold for an account.\n     * @param account The account.\n     * @return The total amount of locked gold for an account.\n     */\n\n    _this.getAccountTotalLockedGold = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.getAccountTotalLockedGold, undefined, BaseWrapper_1.valueToBigNumber);\n    /**\n     * Returns the total amount of locked gold in the system. Note that this does not include\n     *   gold that has been unlocked but not yet withdrawn.\n     * @returns The total amount of locked gold in the system.\n     */\n\n    _this.getTotalLockedGold = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.getTotalLockedGold, undefined, BaseWrapper_1.valueToBigNumber);\n    /**\n     * Returns the total amount of non-voting locked gold for an account.\n     * @param account The account.\n     * @return The total amount of non-voting locked gold for an account.\n     */\n\n    _this.getAccountNonvotingLockedGold = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.getAccountNonvotingLockedGold, undefined, BaseWrapper_1.valueToBigNumber);\n    return _this;\n  }\n\n  LockedGoldWrapper.prototype.getPendingWithdrawalsTotalValue = function (account) {\n    return __awaiter(this, void 0, void 0, function () {\n      var pendingWithdrawals, values, reducer;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.getPendingWithdrawals(account) // Ensure there are enough pending withdrawals to relock.\n            ];\n\n          case 1:\n            pendingWithdrawals = _a.sent();\n            values = pendingWithdrawals.map(function (pw) {\n              return pw.value;\n            });\n\n            reducer = function (total, pw) {\n              return pw.plus(total);\n            };\n\n            return [2\n            /*return*/\n            , values.reduce(reducer, new bignumber_js_1.default(0))];\n        }\n      });\n    });\n  };\n  /**\n   * Relocks gold that has been unlocked but not withdrawn.\n   * @param value The value to relock from pending withdrawals.\n   */\n\n\n  LockedGoldWrapper.prototype.relock = function (account, value) {\n    return __awaiter(this, void 0, void 0, function () {\n      var pendingWithdrawals, totalValue, throwIfNotSorted, remainingToRelock, relockPw;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.getPendingWithdrawals(account) // Ensure there are enough pending withdrawals to relock.\n            ];\n\n          case 1:\n            pendingWithdrawals = _a.sent();\n            return [4\n            /*yield*/\n            , this.getPendingWithdrawalsTotalValue(account)];\n\n          case 2:\n            totalValue = _a.sent();\n\n            if (totalValue.isLessThan(value)) {\n              throw new Error(\"Not enough pending withdrawals to relock \" + value);\n            }\n\n            throwIfNotSorted = function (pw, i) {\n              if (i > 0 && !pw.time.isGreaterThanOrEqualTo(pendingWithdrawals[i - 1].time)) {\n                throw new Error('Pending withdrawals not sorted by timestamp');\n              }\n            };\n\n            pendingWithdrawals.forEach(throwIfNotSorted);\n            remainingToRelock = new bignumber_js_1.default(value);\n\n            relockPw = function (acc, pw, i) {\n              var valueToRelock = bignumber_js_1.default.minimum(pw.value, remainingToRelock);\n\n              if (!valueToRelock.isZero()) {\n                remainingToRelock = remainingToRelock.minus(valueToRelock);\n                acc.push(_this._relock(i, valueToRelock));\n              }\n\n              return acc;\n            };\n\n            return [2\n            /*return*/\n            , pendingWithdrawals.reduceRight(relockPw, [])];\n        }\n      });\n    });\n  };\n  /**\n   * Returns current configuration parameters.\n   */\n\n\n  LockedGoldWrapper.prototype.getConfig = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a;\n\n      var _b;\n\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            _b = {};\n            _a = BaseWrapper_1.valueToBigNumber;\n            return [4\n            /*yield*/\n            , this.contract.methods.unlockingPeriod().call()];\n\n          case 1:\n            _b.unlockingPeriod = _a.apply(void 0, [_c.sent()]);\n            return [4\n            /*yield*/\n            , this.getTotalLockedGold()];\n\n          case 2:\n            return [2\n            /*return*/\n            , (_b.totalLockedGold = _c.sent(), _b)];\n        }\n      });\n    });\n  };\n  /**\n   * @dev Returns human readable configuration of the lockedgold contract\n   * @return LockedGoldConfig object\n   */\n\n\n  LockedGoldWrapper.prototype.getHumanReadableConfig = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var config;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.getConfig()];\n\n          case 1:\n            config = _a.sent();\n            return [2\n            /*return*/\n            , __assign(__assign({}, config), {\n              unlockingPeriod: (0, BaseWrapper_1.secondsToDurationString)(config.unlockingPeriod)\n            })];\n        }\n      });\n    });\n  };\n\n  LockedGoldWrapper.prototype.getAccountSummary = function (account) {\n    return __awaiter(this, void 0, void 0, function () {\n      var nonvoting, total, validators, requirement, pendingWithdrawals;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.getAccountNonvotingLockedGold(account)];\n\n          case 1:\n            nonvoting = _a.sent();\n            return [4\n            /*yield*/\n            , this.getAccountTotalLockedGold(account)];\n\n          case 2:\n            total = _a.sent();\n            return [4\n            /*yield*/\n            , this.kit.contracts.getValidators()];\n\n          case 3:\n            validators = _a.sent();\n            return [4\n            /*yield*/\n            , validators.getAccountLockedGoldRequirement(account)];\n\n          case 4:\n            requirement = _a.sent();\n            return [4\n            /*yield*/\n            , this.getPendingWithdrawals(account)];\n\n          case 5:\n            pendingWithdrawals = _a.sent();\n            return [2\n            /*return*/\n            , {\n              lockedGold: {\n                total: total,\n                nonvoting: nonvoting,\n                requirement: requirement\n              },\n              pendingWithdrawals: pendingWithdrawals\n            }];\n        }\n      });\n    });\n  };\n  /**\n   * Returns the pending withdrawals from unlocked gold for an account.\n   * @param account The address of the account.\n   * @return The value and timestamp for each pending withdrawal.\n   */\n\n\n  LockedGoldWrapper.prototype.getPendingWithdrawals = function (account) {\n    return __awaiter(this, void 0, void 0, function () {\n      var withdrawals;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.contract.methods.getPendingWithdrawals(account).call()];\n\n          case 1:\n            withdrawals = _a.sent();\n            return [2\n            /*return*/\n            , (0, collections_1.zip)(function (time, value) {\n              return {\n                time: (0, BaseWrapper_1.valueToBigNumber)(time),\n                value: (0, BaseWrapper_1.valueToBigNumber)(value)\n              };\n            }, withdrawals[1], withdrawals[0])];\n        }\n      });\n    });\n  };\n  /**\n   * Retrieves AccountSlashed for epochNumber.\n   * @param epochNumber The epoch to retrieve AccountSlashed at.\n   */\n\n\n  LockedGoldWrapper.prototype.getAccountsSlashed = function (epochNumber) {\n    return __awaiter(this, void 0, void 0, function () {\n      var events, _a, _b;\n\n      var _c;\n\n      return __generator(this, function (_d) {\n        switch (_d.label) {\n          case 0:\n            _a = this.getPastEvents;\n            _b = ['AccountSlashed'];\n            _c = {};\n            return [4\n            /*yield*/\n            , this.kit.getFirstBlockNumberForEpoch(epochNumber)];\n\n          case 1:\n            _c.fromBlock = _d.sent();\n            return [4\n            /*yield*/\n            , this.kit.getLastBlockNumberForEpoch(epochNumber)];\n\n          case 2:\n            return [4\n            /*yield*/\n            , _a.apply(this, _b.concat([(_c.toBlock = _d.sent(), _c)]))];\n\n          case 3:\n            events = _d.sent();\n            return [2\n            /*return*/\n            , events.map(function (e) {\n              return {\n                epochNumber: epochNumber,\n                slashed: e.returnValues.slashed,\n                penalty: (0, BaseWrapper_1.valueToBigNumber)(e.returnValues.penalty),\n                reporter: e.returnValues.reporter,\n                reward: (0, BaseWrapper_1.valueToBigNumber)(e.returnValues.reward)\n              };\n            })];\n        }\n      });\n    });\n  };\n  /**\n   * Computes parameters for slashing `penalty` from `account`.\n   * @param account The account to slash.\n   * @param penalty The amount to slash as penalty.\n   * @return List of (group, voting gold) to decrement from `account`.\n   */\n\n\n  LockedGoldWrapper.prototype.computeInitialParametersForSlashing = function (account, penalty) {\n    return __awaiter(this, void 0, void 0, function () {\n      var election, eligible, groups;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.kit.contracts.getElection()];\n\n          case 1:\n            election = _a.sent();\n            return [4\n            /*yield*/\n            , election.getEligibleValidatorGroupsVotes()];\n\n          case 2:\n            eligible = _a.sent();\n            groups = eligible.map(function (x) {\n              return {\n                address: x.address,\n                value: x.votes\n              };\n            });\n            return [2\n            /*return*/\n            , this.computeParametersForSlashing(account, penalty, groups)];\n        }\n      });\n    });\n  };\n\n  LockedGoldWrapper.prototype.computeParametersForSlashing = function (account, penalty, groups) {\n    return __awaiter(this, void 0, void 0, function () {\n      var changed, changes;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.computeDecrementsForSlashing(account, penalty, groups)];\n\n          case 1:\n            changed = _a.sent();\n            changes = linkedListChanges(groups, changed);\n            return [2\n            /*return*/\n            , __assign(__assign({}, changes), {\n              indices: changed.map(function (a) {\n                return a.index;\n              })\n            })];\n        }\n      });\n    });\n  }; // Returns how much voting gold will be decremented from the groups voted by an account\n  // Implementation follows protocol/test/common/integration slashingOfGroups()\n\n\n  LockedGoldWrapper.prototype.computeDecrementsForSlashing = function (account, penalty, allGroups) {\n    var _a;\n\n    return __awaiter(this, void 0, void 0, function () {\n      var nonVoting, difference, election, groups, res, _loop_1, i, state_1;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.getAccountNonvotingLockedGold(account)];\n\n          case 1:\n            nonVoting = _b.sent();\n\n            if (penalty.isLessThan(nonVoting)) {\n              return [2\n              /*return*/\n              , []];\n            }\n\n            difference = penalty.minus(nonVoting);\n            return [4\n            /*yield*/\n            , this.kit.contracts.getElection()];\n\n          case 2:\n            election = _b.sent();\n            return [4\n            /*yield*/\n            , election.getGroupsVotedForByAccount(account)];\n\n          case 3:\n            groups = _b.sent();\n            res = [];\n\n            _loop_1 = function (i) {\n              var group, totalVotes, votes, slashedVotes;\n              return __generator(this, function (_c) {\n                switch (_c.label) {\n                  case 0:\n                    group = groups[i];\n                    totalVotes = (_a = allGroups.find(function (a) {\n                      return a.address === group;\n                    })) === null || _a === void 0 ? void 0 : _a.value;\n\n                    if (!totalVotes) {\n                      throw new Error(\"Cannot find group \" + group);\n                    }\n\n                    return [4\n                    /*yield*/\n                    , election.getTotalVotesForGroupByAccount(group, account)];\n\n                  case 1:\n                    votes = _c.sent();\n                    slashedVotes = votes.lt(difference) ? votes : difference;\n                    res.push({\n                      address: group,\n                      value: totalVotes.minus(slashedVotes),\n                      index: i\n                    });\n                    difference = difference.minus(slashedVotes);\n\n                    if (difference.eq(new bignumber_js_1.default(0))) {\n                      return [2\n                      /*return*/\n                      , \"break\"];\n                    }\n\n                    return [2\n                    /*return*/\n                    ];\n                }\n              });\n            };\n\n            i = groups.length - 1;\n            _b.label = 4;\n\n          case 4:\n            if (!(i >= 0)) return [3\n            /*break*/\n            , 7];\n            return [5\n            /*yield**/\n            , _loop_1(i)];\n\n          case 5:\n            state_1 = _b.sent();\n            if (state_1 === \"break\") return [3\n            /*break*/\n            , 7];\n            _b.label = 6;\n\n          case 6:\n            i--;\n            return [3\n            /*break*/\n            , 4];\n\n          case 7:\n            return [2\n            /*return*/\n            , res];\n        }\n      });\n    });\n  };\n\n  return LockedGoldWrapper;\n}(BaseWrapper_1.BaseWrapper);\n\nexports.LockedGoldWrapper = LockedGoldWrapper;","map":{"version":3,"sources":["../../src/wrappers/LockedGold.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LockedGoldWrapper = void 0;\nvar collections_1 = require(\"@celo/base/lib/collections\");\nvar bignumber_js_1 = __importDefault(require(\"bignumber.js\"));\nvar BaseWrapper_1 = require(\"../wrappers/BaseWrapper\");\nvar bigNumberComparator = function (a, b) { return a.lt(b); };\nfunction linkedListChanges(groups, changed) {\n    return (0, collections_1.linkedListChanges)(groups, changed, bigNumberComparator);\n}\n/**\n * Contract for handling deposits needed for voting.\n */\nvar LockedGoldWrapper = /** @class */ (function (_super) {\n    __extends(LockedGoldWrapper, _super);\n    function LockedGoldWrapper() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Withdraws a gold that has been unlocked after the unlocking period has passed.\n         * @param index The index of the pending withdrawal to withdraw.\n         */\n        _this.withdraw = (0, BaseWrapper_1.proxySend)(_this.kit, _this.contract.methods.withdraw);\n        /**\n         * Locks gold to be used for voting.\n         * The gold to be locked, must be specified as the `tx.value`\n         */\n        _this.lock = (0, BaseWrapper_1.proxySend)(_this.kit, _this.contract.methods.lock);\n        /**\n         * Unlocks gold that becomes withdrawable after the unlocking period.\n         * @param value The amount of gold to unlock.\n         */\n        _this.unlock = (0, BaseWrapper_1.proxySend)(_this.kit, _this.contract.methods.unlock, (0, BaseWrapper_1.tupleParser)(BaseWrapper_1.valueToString));\n        /**\n         * Relocks gold that has been unlocked but not withdrawn.\n         * @param index The index of the pending withdrawal to relock from.\n         * @param value The value to relock from the specified pending withdrawal.\n         */\n        _this._relock = (0, BaseWrapper_1.proxySend)(_this.kit, _this.contract.methods.relock, (0, BaseWrapper_1.tupleParser)(BaseWrapper_1.valueToString, BaseWrapper_1.valueToString));\n        /**\n         * Returns the total amount of locked gold for an account.\n         * @param account The account.\n         * @return The total amount of locked gold for an account.\n         */\n        _this.getAccountTotalLockedGold = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.getAccountTotalLockedGold, undefined, BaseWrapper_1.valueToBigNumber);\n        /**\n         * Returns the total amount of locked gold in the system. Note that this does not include\n         *   gold that has been unlocked but not yet withdrawn.\n         * @returns The total amount of locked gold in the system.\n         */\n        _this.getTotalLockedGold = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.getTotalLockedGold, undefined, BaseWrapper_1.valueToBigNumber);\n        /**\n         * Returns the total amount of non-voting locked gold for an account.\n         * @param account The account.\n         * @return The total amount of non-voting locked gold for an account.\n         */\n        _this.getAccountNonvotingLockedGold = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.getAccountNonvotingLockedGold, undefined, BaseWrapper_1.valueToBigNumber);\n        return _this;\n    }\n    LockedGoldWrapper.prototype.getPendingWithdrawalsTotalValue = function (account) {\n        return __awaiter(this, void 0, void 0, function () {\n            var pendingWithdrawals, values, reducer;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getPendingWithdrawals(account)\n                        // Ensure there are enough pending withdrawals to relock.\n                    ];\n                    case 1:\n                        pendingWithdrawals = _a.sent();\n                        values = pendingWithdrawals.map(function (pw) { return pw.value; });\n                        reducer = function (total, pw) { return pw.plus(total); };\n                        return [2 /*return*/, values.reduce(reducer, new bignumber_js_1.default(0))];\n                }\n            });\n        });\n    };\n    /**\n     * Relocks gold that has been unlocked but not withdrawn.\n     * @param value The value to relock from pending withdrawals.\n     */\n    LockedGoldWrapper.prototype.relock = function (account, value) {\n        return __awaiter(this, void 0, void 0, function () {\n            var pendingWithdrawals, totalValue, throwIfNotSorted, remainingToRelock, relockPw;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getPendingWithdrawals(account)\n                        // Ensure there are enough pending withdrawals to relock.\n                    ];\n                    case 1:\n                        pendingWithdrawals = _a.sent();\n                        return [4 /*yield*/, this.getPendingWithdrawalsTotalValue(account)];\n                    case 2:\n                        totalValue = _a.sent();\n                        if (totalValue.isLessThan(value)) {\n                            throw new Error(\"Not enough pending withdrawals to relock \" + value);\n                        }\n                        throwIfNotSorted = function (pw, i) {\n                            if (i > 0 && !pw.time.isGreaterThanOrEqualTo(pendingWithdrawals[i - 1].time)) {\n                                throw new Error('Pending withdrawals not sorted by timestamp');\n                            }\n                        };\n                        pendingWithdrawals.forEach(throwIfNotSorted);\n                        remainingToRelock = new bignumber_js_1.default(value);\n                        relockPw = function (acc, pw, i) {\n                            var valueToRelock = bignumber_js_1.default.minimum(pw.value, remainingToRelock);\n                            if (!valueToRelock.isZero()) {\n                                remainingToRelock = remainingToRelock.minus(valueToRelock);\n                                acc.push(_this._relock(i, valueToRelock));\n                            }\n                            return acc;\n                        };\n                        return [2 /*return*/, pendingWithdrawals.reduceRight(relockPw, [])];\n                }\n            });\n        });\n    };\n    /**\n     * Returns current configuration parameters.\n     */\n    LockedGoldWrapper.prototype.getConfig = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a;\n            var _b;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        _b = {};\n                        _a = BaseWrapper_1.valueToBigNumber;\n                        return [4 /*yield*/, this.contract.methods.unlockingPeriod().call()];\n                    case 1:\n                        _b.unlockingPeriod = _a.apply(void 0, [_c.sent()]);\n                        return [4 /*yield*/, this.getTotalLockedGold()];\n                    case 2: return [2 /*return*/, (_b.totalLockedGold = _c.sent(),\n                            _b)];\n                }\n            });\n        });\n    };\n    /**\n     * @dev Returns human readable configuration of the lockedgold contract\n     * @return LockedGoldConfig object\n     */\n    LockedGoldWrapper.prototype.getHumanReadableConfig = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var config;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getConfig()];\n                    case 1:\n                        config = _a.sent();\n                        return [2 /*return*/, __assign(__assign({}, config), { unlockingPeriod: (0, BaseWrapper_1.secondsToDurationString)(config.unlockingPeriod) })];\n                }\n            });\n        });\n    };\n    LockedGoldWrapper.prototype.getAccountSummary = function (account) {\n        return __awaiter(this, void 0, void 0, function () {\n            var nonvoting, total, validators, requirement, pendingWithdrawals;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getAccountNonvotingLockedGold(account)];\n                    case 1:\n                        nonvoting = _a.sent();\n                        return [4 /*yield*/, this.getAccountTotalLockedGold(account)];\n                    case 2:\n                        total = _a.sent();\n                        return [4 /*yield*/, this.kit.contracts.getValidators()];\n                    case 3:\n                        validators = _a.sent();\n                        return [4 /*yield*/, validators.getAccountLockedGoldRequirement(account)];\n                    case 4:\n                        requirement = _a.sent();\n                        return [4 /*yield*/, this.getPendingWithdrawals(account)];\n                    case 5:\n                        pendingWithdrawals = _a.sent();\n                        return [2 /*return*/, {\n                                lockedGold: {\n                                    total: total,\n                                    nonvoting: nonvoting,\n                                    requirement: requirement,\n                                },\n                                pendingWithdrawals: pendingWithdrawals,\n                            }];\n                }\n            });\n        });\n    };\n    /**\n     * Returns the pending withdrawals from unlocked gold for an account.\n     * @param account The address of the account.\n     * @return The value and timestamp for each pending withdrawal.\n     */\n    LockedGoldWrapper.prototype.getPendingWithdrawals = function (account) {\n        return __awaiter(this, void 0, void 0, function () {\n            var withdrawals;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.contract.methods.getPendingWithdrawals(account).call()];\n                    case 1:\n                        withdrawals = _a.sent();\n                        return [2 /*return*/, (0, collections_1.zip)(function (time, value) { return ({\n                                time: (0, BaseWrapper_1.valueToBigNumber)(time),\n                                value: (0, BaseWrapper_1.valueToBigNumber)(value),\n                            }); }, withdrawals[1], withdrawals[0])];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves AccountSlashed for epochNumber.\n     * @param epochNumber The epoch to retrieve AccountSlashed at.\n     */\n    LockedGoldWrapper.prototype.getAccountsSlashed = function (epochNumber) {\n        return __awaiter(this, void 0, void 0, function () {\n            var events, _a, _b;\n            var _c;\n            return __generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        _a = this.getPastEvents;\n                        _b = ['AccountSlashed'];\n                        _c = {};\n                        return [4 /*yield*/, this.kit.getFirstBlockNumberForEpoch(epochNumber)];\n                    case 1:\n                        _c.fromBlock = _d.sent();\n                        return [4 /*yield*/, this.kit.getLastBlockNumberForEpoch(epochNumber)];\n                    case 2: return [4 /*yield*/, _a.apply(this, _b.concat([(_c.toBlock = _d.sent(),\n                                _c)]))];\n                    case 3:\n                        events = _d.sent();\n                        return [2 /*return*/, events.map(function (e) { return ({\n                                epochNumber: epochNumber,\n                                slashed: e.returnValues.slashed,\n                                penalty: (0, BaseWrapper_1.valueToBigNumber)(e.returnValues.penalty),\n                                reporter: e.returnValues.reporter,\n                                reward: (0, BaseWrapper_1.valueToBigNumber)(e.returnValues.reward),\n                            }); })];\n                }\n            });\n        });\n    };\n    /**\n     * Computes parameters for slashing `penalty` from `account`.\n     * @param account The account to slash.\n     * @param penalty The amount to slash as penalty.\n     * @return List of (group, voting gold) to decrement from `account`.\n     */\n    LockedGoldWrapper.prototype.computeInitialParametersForSlashing = function (account, penalty) {\n        return __awaiter(this, void 0, void 0, function () {\n            var election, eligible, groups;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.kit.contracts.getElection()];\n                    case 1:\n                        election = _a.sent();\n                        return [4 /*yield*/, election.getEligibleValidatorGroupsVotes()];\n                    case 2:\n                        eligible = _a.sent();\n                        groups = eligible.map(function (x) { return ({ address: x.address, value: x.votes }); });\n                        return [2 /*return*/, this.computeParametersForSlashing(account, penalty, groups)];\n                }\n            });\n        });\n    };\n    LockedGoldWrapper.prototype.computeParametersForSlashing = function (account, penalty, groups) {\n        return __awaiter(this, void 0, void 0, function () {\n            var changed, changes;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.computeDecrementsForSlashing(account, penalty, groups)];\n                    case 1:\n                        changed = _a.sent();\n                        changes = linkedListChanges(groups, changed);\n                        return [2 /*return*/, __assign(__assign({}, changes), { indices: changed.map(function (a) { return a.index; }) })];\n                }\n            });\n        });\n    };\n    // Returns how much voting gold will be decremented from the groups voted by an account\n    // Implementation follows protocol/test/common/integration slashingOfGroups()\n    LockedGoldWrapper.prototype.computeDecrementsForSlashing = function (account, penalty, allGroups) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function () {\n            var nonVoting, difference, election, groups, res, _loop_1, i, state_1;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0: return [4 /*yield*/, this.getAccountNonvotingLockedGold(account)];\n                    case 1:\n                        nonVoting = _b.sent();\n                        if (penalty.isLessThan(nonVoting)) {\n                            return [2 /*return*/, []];\n                        }\n                        difference = penalty.minus(nonVoting);\n                        return [4 /*yield*/, this.kit.contracts.getElection()];\n                    case 2:\n                        election = _b.sent();\n                        return [4 /*yield*/, election.getGroupsVotedForByAccount(account)];\n                    case 3:\n                        groups = _b.sent();\n                        res = [];\n                        _loop_1 = function (i) {\n                            var group, totalVotes, votes, slashedVotes;\n                            return __generator(this, function (_c) {\n                                switch (_c.label) {\n                                    case 0:\n                                        group = groups[i];\n                                        totalVotes = (_a = allGroups.find(function (a) { return a.address === group; })) === null || _a === void 0 ? void 0 : _a.value;\n                                        if (!totalVotes) {\n                                            throw new Error(\"Cannot find group \" + group);\n                                        }\n                                        return [4 /*yield*/, election.getTotalVotesForGroupByAccount(group, account)];\n                                    case 1:\n                                        votes = _c.sent();\n                                        slashedVotes = votes.lt(difference) ? votes : difference;\n                                        res.push({ address: group, value: totalVotes.minus(slashedVotes), index: i });\n                                        difference = difference.minus(slashedVotes);\n                                        if (difference.eq(new bignumber_js_1.default(0))) {\n                                            return [2 /*return*/, \"break\"];\n                                        }\n                                        return [2 /*return*/];\n                                }\n                            });\n                        };\n                        i = groups.length - 1;\n                        _b.label = 4;\n                    case 4:\n                        if (!(i >= 0)) return [3 /*break*/, 7];\n                        return [5 /*yield**/, _loop_1(i)];\n                    case 5:\n                        state_1 = _b.sent();\n                        if (state_1 === \"break\")\n                            return [3 /*break*/, 7];\n                        _b.label = 6;\n                    case 6:\n                        i--;\n                        return [3 /*break*/, 4];\n                    case 7: return [2 /*return*/, res];\n                }\n            });\n        });\n    };\n    return LockedGoldWrapper;\n}(BaseWrapper_1.BaseWrapper));\nexports.LockedGoldWrapper = LockedGoldWrapper;\n//# sourceMappingURL=LockedGold.js.map"]},"metadata":{},"sourceType":"script"}