{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setImplementationOnProxy = exports.getInitializeAbiOfImplementation = exports.PROXY_SET_AND_INITIALIZE_IMPLEMENTATION_SIGNATURE = exports.PROXY_SET_IMPLEMENTATION_SIGNATURE = exports.PROXY_ABI = exports.SET_AND_INITIALIZE_IMPLEMENTATION_ABI = exports.SET_IMPLEMENTATION_ABI = exports.GET_IMPLEMENTATION_ABI = void 0;\n\nvar Accounts_1 = require(\"./generated/Accounts\");\n\nvar Attestations_1 = require(\"./generated/Attestations\");\n\nvar BlockchainParameters_1 = require(\"./generated/BlockchainParameters\");\n\nvar DoubleSigningSlasher_1 = require(\"./generated/DoubleSigningSlasher\");\n\nvar DowntimeSlasher_1 = require(\"./generated/DowntimeSlasher\");\n\nvar Election_1 = require(\"./generated/Election\");\n\nvar EpochRewards_1 = require(\"./generated/EpochRewards\");\n\nvar Escrow_1 = require(\"./generated/Escrow\");\n\nvar Exchange_1 = require(\"./generated/Exchange\");\n\nvar FeeCurrencyWhitelist_1 = require(\"./generated/FeeCurrencyWhitelist\");\n\nvar Freezer_1 = require(\"./generated/Freezer\");\n\nvar GasPriceMinimum_1 = require(\"./generated/GasPriceMinimum\");\n\nvar GoldToken_1 = require(\"./generated/GoldToken\");\n\nvar Governance_1 = require(\"./generated/Governance\");\n\nvar GrandaMento_1 = require(\"./generated/GrandaMento\");\n\nvar LockedGold_1 = require(\"./generated/LockedGold\");\n\nvar MetaTransactionWallet_1 = require(\"./generated/MetaTransactionWallet\");\n\nvar MetaTransactionWalletDeployer_1 = require(\"./generated/MetaTransactionWalletDeployer\");\n\nvar MultiSig_1 = require(\"./generated/MultiSig\");\n\nvar Proxy_1 = require(\"./generated/Proxy\");\n\nvar Random_1 = require(\"./generated/Random\");\n\nvar Registry_1 = require(\"./generated/Registry\");\n\nvar Reserve_1 = require(\"./generated/Reserve\");\n\nvar SortedOracles_1 = require(\"./generated/SortedOracles\");\n\nvar StableToken_1 = require(\"./generated/StableToken\");\n\nvar TransferWhitelist_1 = require(\"./generated/TransferWhitelist\");\n\nvar Validators_1 = require(\"./generated/Validators\");\n\nexports.GET_IMPLEMENTATION_ABI = {\n  constant: true,\n  inputs: [],\n  name: '_getImplementation',\n  outputs: [{\n    name: 'implementation',\n    type: 'address'\n  }],\n  payable: false,\n  stateMutability: 'view',\n  type: 'function',\n  signature: '0x42404e07'\n};\nexports.SET_IMPLEMENTATION_ABI = {\n  constant: false,\n  inputs: [{\n    name: 'implementation',\n    type: 'address'\n  }],\n  name: '_setImplementation',\n  outputs: [],\n  payable: false,\n  stateMutability: 'nonpayable',\n  type: 'function',\n  signature: '0xbb913f41'\n};\nexports.SET_AND_INITIALIZE_IMPLEMENTATION_ABI = {\n  constant: false,\n  inputs: [{\n    name: 'implementation',\n    type: 'address'\n  }, {\n    name: 'callbackData',\n    type: 'bytes'\n  }],\n  name: '_setAndInitializeImplementation',\n  outputs: [],\n  payable: true,\n  stateMutability: 'payable',\n  type: 'function',\n  signature: '0x03386ba3'\n};\nexports.PROXY_ABI = [exports.GET_IMPLEMENTATION_ABI, exports.SET_IMPLEMENTATION_ABI, exports.SET_AND_INITIALIZE_IMPLEMENTATION_ABI];\nexports.PROXY_SET_IMPLEMENTATION_SIGNATURE = exports.SET_IMPLEMENTATION_ABI.signature;\nexports.PROXY_SET_AND_INITIALIZE_IMPLEMENTATION_SIGNATURE = exports.SET_AND_INITIALIZE_IMPLEMENTATION_ABI.signature;\n\nvar findInitializeAbi = function (items) {\n  return items.find(function (item) {\n    return item.name === 'initialize';\n  });\n};\n\nvar initializeAbiMap = {\n  AccountsProxy: findInitializeAbi(Accounts_1.ABI),\n  AttestationsProxy: findInitializeAbi(Attestations_1.ABI),\n  BlockchainParametersProxy: findInitializeAbi(BlockchainParameters_1.ABI),\n  DoubleSigningSlasherProxy: findInitializeAbi(DoubleSigningSlasher_1.ABI),\n  DowntimeSlasherProxy: findInitializeAbi(DowntimeSlasher_1.ABI),\n  ElectionProxy: findInitializeAbi(Election_1.ABI),\n  EpochRewardsProxy: findInitializeAbi(EpochRewards_1.ABI),\n  EscrowProxy: findInitializeAbi(Escrow_1.ABI),\n  ExchangeProxy: findInitializeAbi(Exchange_1.ABI),\n  ExchangeEURProxy: findInitializeAbi(Exchange_1.ABI),\n  ExchangeBRLProxy: findInitializeAbi(Exchange_1.ABI),\n  FeeCurrencyWhitelistProxy: findInitializeAbi(FeeCurrencyWhitelist_1.ABI),\n  FreezerProxy: findInitializeAbi(Freezer_1.ABI),\n  GasPriceMinimumProxy: findInitializeAbi(GasPriceMinimum_1.ABI),\n  GoldTokenProxy: findInitializeAbi(GoldToken_1.ABI),\n  GovernanceProxy: findInitializeAbi(Governance_1.ABI),\n  GrandaMentoProxy: findInitializeAbi(GrandaMento_1.ABI),\n  LockedGoldProxy: findInitializeAbi(LockedGold_1.ABI),\n  MetaTransactionWalletProxy: findInitializeAbi(MetaTransactionWallet_1.ABI),\n  MetaTransactionWalletDeployerProxy: findInitializeAbi(MetaTransactionWalletDeployer_1.ABI),\n  MultiSigProxy: findInitializeAbi(MultiSig_1.ABI),\n  ProxyProxy: findInitializeAbi(Proxy_1.ABI),\n  RandomProxy: findInitializeAbi(Random_1.ABI),\n  RegistryProxy: findInitializeAbi(Registry_1.ABI),\n  ReserveProxy: findInitializeAbi(Reserve_1.ABI),\n  SortedOraclesProxy: findInitializeAbi(SortedOracles_1.ABI),\n  StableTokenProxy: findInitializeAbi(StableToken_1.ABI),\n  StableTokenEURProxy: findInitializeAbi(StableToken_1.ABI),\n  StableTokenBRLProxy: findInitializeAbi(StableToken_1.ABI),\n  TransferWhitelistProxy: findInitializeAbi(TransferWhitelist_1.ABI),\n  ValidatorsProxy: findInitializeAbi(Validators_1.ABI)\n};\n\nvar getInitializeAbiOfImplementation = function (proxyContractName) {\n  var initializeAbi = initializeAbiMap[proxyContractName];\n\n  if (!initializeAbi) {\n    throw new Error(\"Initialize method not found on implementation of \" + proxyContractName);\n  }\n\n  return initializeAbi;\n};\n\nexports.getInitializeAbiOfImplementation = getInitializeAbiOfImplementation;\n\nvar setImplementationOnProxy = function (address, web3) {\n  var proxyWeb3Contract = new web3.eth.Contract(exports.PROXY_ABI);\n  return proxyWeb3Contract.methods._setImplementation(address);\n};\n\nexports.setImplementationOnProxy = setImplementationOnProxy;","map":{"version":3,"sources":["../src/proxy.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setImplementationOnProxy = exports.getInitializeAbiOfImplementation = exports.PROXY_SET_AND_INITIALIZE_IMPLEMENTATION_SIGNATURE = exports.PROXY_SET_IMPLEMENTATION_SIGNATURE = exports.PROXY_ABI = exports.SET_AND_INITIALIZE_IMPLEMENTATION_ABI = exports.SET_IMPLEMENTATION_ABI = exports.GET_IMPLEMENTATION_ABI = void 0;\nvar Accounts_1 = require(\"./generated/Accounts\");\nvar Attestations_1 = require(\"./generated/Attestations\");\nvar BlockchainParameters_1 = require(\"./generated/BlockchainParameters\");\nvar DoubleSigningSlasher_1 = require(\"./generated/DoubleSigningSlasher\");\nvar DowntimeSlasher_1 = require(\"./generated/DowntimeSlasher\");\nvar Election_1 = require(\"./generated/Election\");\nvar EpochRewards_1 = require(\"./generated/EpochRewards\");\nvar Escrow_1 = require(\"./generated/Escrow\");\nvar Exchange_1 = require(\"./generated/Exchange\");\nvar FeeCurrencyWhitelist_1 = require(\"./generated/FeeCurrencyWhitelist\");\nvar Freezer_1 = require(\"./generated/Freezer\");\nvar GasPriceMinimum_1 = require(\"./generated/GasPriceMinimum\");\nvar GoldToken_1 = require(\"./generated/GoldToken\");\nvar Governance_1 = require(\"./generated/Governance\");\nvar GrandaMento_1 = require(\"./generated/GrandaMento\");\nvar LockedGold_1 = require(\"./generated/LockedGold\");\nvar MetaTransactionWallet_1 = require(\"./generated/MetaTransactionWallet\");\nvar MetaTransactionWalletDeployer_1 = require(\"./generated/MetaTransactionWalletDeployer\");\nvar MultiSig_1 = require(\"./generated/MultiSig\");\nvar Proxy_1 = require(\"./generated/Proxy\");\nvar Random_1 = require(\"./generated/Random\");\nvar Registry_1 = require(\"./generated/Registry\");\nvar Reserve_1 = require(\"./generated/Reserve\");\nvar SortedOracles_1 = require(\"./generated/SortedOracles\");\nvar StableToken_1 = require(\"./generated/StableToken\");\nvar TransferWhitelist_1 = require(\"./generated/TransferWhitelist\");\nvar Validators_1 = require(\"./generated/Validators\");\nexports.GET_IMPLEMENTATION_ABI = {\n    constant: true,\n    inputs: [],\n    name: '_getImplementation',\n    outputs: [\n        {\n            name: 'implementation',\n            type: 'address',\n        },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n    signature: '0x42404e07',\n};\nexports.SET_IMPLEMENTATION_ABI = {\n    constant: false,\n    inputs: [\n        {\n            name: 'implementation',\n            type: 'address',\n        },\n    ],\n    name: '_setImplementation',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n    signature: '0xbb913f41',\n};\nexports.SET_AND_INITIALIZE_IMPLEMENTATION_ABI = {\n    constant: false,\n    inputs: [\n        {\n            name: 'implementation',\n            type: 'address',\n        },\n        {\n            name: 'callbackData',\n            type: 'bytes',\n        },\n    ],\n    name: '_setAndInitializeImplementation',\n    outputs: [],\n    payable: true,\n    stateMutability: 'payable',\n    type: 'function',\n    signature: '0x03386ba3',\n};\nexports.PROXY_ABI = [\n    exports.GET_IMPLEMENTATION_ABI,\n    exports.SET_IMPLEMENTATION_ABI,\n    exports.SET_AND_INITIALIZE_IMPLEMENTATION_ABI,\n];\nexports.PROXY_SET_IMPLEMENTATION_SIGNATURE = exports.SET_IMPLEMENTATION_ABI.signature;\nexports.PROXY_SET_AND_INITIALIZE_IMPLEMENTATION_SIGNATURE = exports.SET_AND_INITIALIZE_IMPLEMENTATION_ABI.signature;\nvar findInitializeAbi = function (items) { return items.find(function (item) { return item.name === 'initialize'; }); };\nvar initializeAbiMap = {\n    AccountsProxy: findInitializeAbi(Accounts_1.ABI),\n    AttestationsProxy: findInitializeAbi(Attestations_1.ABI),\n    BlockchainParametersProxy: findInitializeAbi(BlockchainParameters_1.ABI),\n    DoubleSigningSlasherProxy: findInitializeAbi(DoubleSigningSlasher_1.ABI),\n    DowntimeSlasherProxy: findInitializeAbi(DowntimeSlasher_1.ABI),\n    ElectionProxy: findInitializeAbi(Election_1.ABI),\n    EpochRewardsProxy: findInitializeAbi(EpochRewards_1.ABI),\n    EscrowProxy: findInitializeAbi(Escrow_1.ABI),\n    ExchangeProxy: findInitializeAbi(Exchange_1.ABI),\n    ExchangeEURProxy: findInitializeAbi(Exchange_1.ABI),\n    ExchangeBRLProxy: findInitializeAbi(Exchange_1.ABI),\n    FeeCurrencyWhitelistProxy: findInitializeAbi(FeeCurrencyWhitelist_1.ABI),\n    FreezerProxy: findInitializeAbi(Freezer_1.ABI),\n    GasPriceMinimumProxy: findInitializeAbi(GasPriceMinimum_1.ABI),\n    GoldTokenProxy: findInitializeAbi(GoldToken_1.ABI),\n    GovernanceProxy: findInitializeAbi(Governance_1.ABI),\n    GrandaMentoProxy: findInitializeAbi(GrandaMento_1.ABI),\n    LockedGoldProxy: findInitializeAbi(LockedGold_1.ABI),\n    MetaTransactionWalletProxy: findInitializeAbi(MetaTransactionWallet_1.ABI),\n    MetaTransactionWalletDeployerProxy: findInitializeAbi(MetaTransactionWalletDeployer_1.ABI),\n    MultiSigProxy: findInitializeAbi(MultiSig_1.ABI),\n    ProxyProxy: findInitializeAbi(Proxy_1.ABI),\n    RandomProxy: findInitializeAbi(Random_1.ABI),\n    RegistryProxy: findInitializeAbi(Registry_1.ABI),\n    ReserveProxy: findInitializeAbi(Reserve_1.ABI),\n    SortedOraclesProxy: findInitializeAbi(SortedOracles_1.ABI),\n    StableTokenProxy: findInitializeAbi(StableToken_1.ABI),\n    StableTokenEURProxy: findInitializeAbi(StableToken_1.ABI),\n    StableTokenBRLProxy: findInitializeAbi(StableToken_1.ABI),\n    TransferWhitelistProxy: findInitializeAbi(TransferWhitelist_1.ABI),\n    ValidatorsProxy: findInitializeAbi(Validators_1.ABI),\n};\nvar getInitializeAbiOfImplementation = function (proxyContractName) {\n    var initializeAbi = initializeAbiMap[proxyContractName];\n    if (!initializeAbi) {\n        throw new Error(\"Initialize method not found on implementation of \" + proxyContractName);\n    }\n    return initializeAbi;\n};\nexports.getInitializeAbiOfImplementation = getInitializeAbiOfImplementation;\nvar setImplementationOnProxy = function (address, web3) {\n    var proxyWeb3Contract = new web3.eth.Contract(exports.PROXY_ABI);\n    return proxyWeb3Contract.methods._setImplementation(address);\n};\nexports.setImplementationOnProxy = setImplementationOnProxy;\n//# sourceMappingURL=proxy.js.map"]},"metadata":{},"sourceType":"script"}