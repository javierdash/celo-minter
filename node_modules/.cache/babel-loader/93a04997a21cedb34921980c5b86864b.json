{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ContractKit = exports.newKitFromWeb3 = exports.newKitWithApiKey = exports.newKit = exports.API_KEY_HEADER_KEY = void 0;\n\nvar connect_1 = require(\"@celo/connect\");\n\nvar wallet_local_1 = require(\"@celo/wallet-local\");\n\nvar bignumber_js_1 = require(\"bignumber.js\");\n\nvar net_1 = __importDefault(require(\"net\"));\n\nvar web3_1 = __importDefault(require(\"web3\"));\n\nvar address_registry_1 = require(\"./address-registry\");\n\nvar base_1 = require(\"./base\");\n\nvar celo_tokens_1 = require(\"./celo-tokens\");\n\nvar contract_cache_1 = require(\"./contract-cache\");\n\nvar web3_contract_cache_1 = require(\"./web3-contract-cache\");\n\nexports.API_KEY_HEADER_KEY = 'apiKey';\n/**\n * Creates a new instance of `ContractKit` given a nodeUrl\n * @param url CeloBlockchain node url\n * @optional wallet to reuse or add a wallet different than the default (example ledger-wallet)\n * @optional options to pass to the Web3 HttpProvider constructor\n */\n\nfunction newKit(url, wallet, options) {\n  var web3;\n\n  if (url.endsWith('.ipc')) {\n    web3 = new web3_1.default(new web3_1.default.providers.IpcProvider(url, net_1.default));\n  } else if (url.toLowerCase().startsWith('http')) {\n    web3 = new web3_1.default(new web3_1.default.providers.HttpProvider(url, options));\n  } else {\n    web3 = new web3_1.default(url);\n  }\n\n  return newKitFromWeb3(web3, wallet);\n}\n\nexports.newKit = newKit;\n/**\n * Creates a new instance of `ContractKit` given a nodeUrl and apiKey\n * @param url CeloBlockchain node url\n * @param apiKey to include in the http request header\n * @optional wallet to reuse or add a wallet different than the default (example ledger-wallet)\n */\n\nfunction newKitWithApiKey(url, apiKey, wallet) {\n  var options = {};\n  options.headers = [];\n  options.headers.push({\n    name: exports.API_KEY_HEADER_KEY,\n    value: apiKey\n  });\n  return newKit(url, wallet, options);\n}\n\nexports.newKitWithApiKey = newKitWithApiKey;\n/**\n * Creates a new instance of the `ContractKit` with a web3 instance\n * @param web3 Web3 instance\n */\n\nfunction newKitFromWeb3(web3, wallet) {\n  if (wallet === void 0) {\n    wallet = new wallet_local_1.LocalWallet();\n  }\n\n  if (!web3.currentProvider) {\n    throw new Error('Must have a valid Provider');\n  }\n\n  return new ContractKit(new connect_1.Connection(web3, wallet));\n}\n\nexports.newKitFromWeb3 = newKitFromWeb3;\n\nvar ContractKit =\n/** @class */\nfunction () {\n  function ContractKit(connection) {\n    var _this = this;\n\n    this.connection = connection; // TODO: remove once cUSD gasPrice is available on minimumClientVersion node rpc\n\n    this.gasPriceSuggestionMultiplier = 5;\n\n    this.getHumanReadableNetworkConfig = function () {\n      return _this.getNetworkConfig(true);\n    };\n\n    this.registry = new address_registry_1.AddressRegistry(this);\n    this._web3Contracts = new web3_contract_cache_1.Web3ContractCache(this);\n    this.contracts = new contract_cache_1.WrapperCache(this);\n    this.celoTokens = new celo_tokens_1.CeloTokens(this);\n  }\n\n  ContractKit.prototype.getWallet = function () {\n    return this.connection.wallet;\n  };\n\n  ContractKit.prototype.getTotalBalance = function (address) {\n    return __awaiter(this, void 0, void 0, function () {\n      var lockedCelo, lockedBalance, pending, err_1, _a;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.contracts.getLockedGold()];\n\n          case 1:\n            lockedCelo = _b.sent();\n            return [4\n            /*yield*/\n            , lockedCelo.getAccountTotalLockedGold(address)];\n\n          case 2:\n            lockedBalance = _b.sent();\n            pending = new bignumber_js_1.BigNumber(0);\n            _b.label = 3;\n\n          case 3:\n            _b.trys.push([3, 5,, 6]);\n\n            return [4\n            /*yield*/\n            , lockedCelo.getPendingWithdrawalsTotalValue(address)];\n\n          case 4:\n            pending = _b.sent();\n            return [3\n            /*break*/\n            , 6];\n\n          case 5:\n            err_1 = _b.sent();\n            return [3\n            /*break*/\n            , 6];\n\n          case 6:\n            _a = [{\n              lockedCELO: lockedBalance,\n              pending: pending\n            }];\n            return [4\n            /*yield*/\n            , this.celoTokens.balancesOf(address)];\n\n          case 7:\n            return [2\n            /*return*/\n            , __assign.apply(void 0, _a.concat([_b.sent()]))];\n        }\n      });\n    });\n  };\n\n  ContractKit.prototype.getNetworkConfig = function (humanReadable) {\n    if (humanReadable === void 0) {\n      humanReadable = false;\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var configContracts, configMethod, configArray, configMap;\n\n      var _a;\n\n      var _this = this;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            configContracts = [base_1.CeloContract.Election, base_1.CeloContract.Attestations, base_1.CeloContract.Governance, base_1.CeloContract.LockedGold, base_1.CeloContract.SortedOracles, base_1.CeloContract.GasPriceMinimum, base_1.CeloContract.Reserve, base_1.CeloContract.Validators, base_1.CeloContract.DowntimeSlasher, base_1.CeloContract.BlockchainParameters, base_1.CeloContract.EpochRewards, base_1.CeloContract.GrandaMento];\n\n            configMethod = function (contract) {\n              return __awaiter(_this, void 0, void 0, function () {\n                var configContractWrapper, e_1;\n                return __generator(this, function (_a) {\n                  switch (_a.label) {\n                    case 0:\n                      _a.trys.push([0, 2,, 3]);\n\n                      return [4\n                      /*yield*/\n                      , this.contracts.getContract(contract)];\n\n                    case 1:\n                      configContractWrapper = _a.sent();\n\n                      if (humanReadable && 'getHumanReadableConfig' in configContractWrapper) {\n                        return [2\n                        /*return*/\n                        , configContractWrapper.getHumanReadableConfig()];\n                      } else if ('getConfig' in configContractWrapper) {\n                        return [2\n                        /*return*/\n                        , configContractWrapper.getConfig()];\n                      } else {\n                        throw new Error('No config endpoint found');\n                      }\n\n                      return [3\n                      /*break*/\n                      , 3];\n\n                    case 2:\n                      e_1 = _a.sent();\n                      return [2\n                      /*return*/\n                      , new Error(\"Failed to fetch config for contract \" + contract + \": \\n\" + e_1)];\n\n                    case 3:\n                      return [2\n                      /*return*/\n                      ];\n                  }\n                });\n              });\n            };\n\n            return [4\n            /*yield*/\n            , Promise.all(configContracts.map(configMethod))];\n\n          case 1:\n            configArray = _b.sent();\n            configMap = {};\n            configArray.forEach(function (config, index) {\n              return configMap[configContracts[index]] = config;\n            });\n            _a = {};\n            return [4\n            /*yield*/\n            , this.celoTokens.getExchangesConfigs(humanReadable)];\n\n          case 2:\n            _a.exchanges = _b.sent();\n            return [4\n            /*yield*/\n            , this.celoTokens.getStablesConfigs(humanReadable)];\n\n          case 3:\n            return [2\n            /*return*/\n            , __assign.apply(void 0, [(_a.stableTokens = _b.sent(), _a), configMap])];\n        }\n      });\n    });\n  };\n  /**\n   * Set CeloToken to use to pay for gas fees\n   * @param tokenContract CELO (GoldToken) or a supported StableToken contract\n   */\n\n\n  ContractKit.prototype.setFeeCurrency = function (tokenContract) {\n    return __awaiter(this, void 0, void 0, function () {\n      var address, _a;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            if (!(tokenContract === base_1.CeloContract.GoldToken)) return [3\n            /*break*/\n            , 1];\n            _a = undefined;\n            return [3\n            /*break*/\n            , 3];\n\n          case 1:\n            return [4\n            /*yield*/\n            , this.registry.addressFor(tokenContract)];\n\n          case 2:\n            _a = _b.sent();\n            _b.label = 3;\n\n          case 3:\n            address = _a;\n            if (!address) return [3\n            /*break*/\n            , 5];\n            return [4\n            /*yield*/\n            , this.updateGasPriceInConnectionLayer(address)];\n\n          case 4:\n            _b.sent();\n\n            _b.label = 5;\n\n          case 5:\n            this.connection.defaultFeeCurrency = address;\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  }; // TODO: remove once cUSD gasPrice is available on minimumClientVersion node rpc\n\n\n  ContractKit.prototype.updateGasPriceInConnectionLayer = function (currency) {\n    return __awaiter(this, void 0, void 0, function () {\n      var gasPriceMinimum, rawGasPrice, gasPrice;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.contracts.getGasPriceMinimum()];\n\n          case 1:\n            gasPriceMinimum = _a.sent();\n            return [4\n            /*yield*/\n            , gasPriceMinimum.getGasPriceMinimum(currency)];\n\n          case 2:\n            rawGasPrice = _a.sent();\n            gasPrice = rawGasPrice.multipliedBy(this.gasPriceSuggestionMultiplier).toFixed();\n            return [4\n            /*yield*/\n            , this.connection.setGasPriceForCurrency(currency, gasPrice)];\n\n          case 3:\n            _a.sent();\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  ContractKit.prototype.getEpochSize = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var validators, epochSize;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.contracts.getValidators()];\n\n          case 1:\n            validators = _a.sent();\n            return [4\n            /*yield*/\n            , validators.getEpochSize()];\n\n          case 2:\n            epochSize = _a.sent();\n            return [2\n            /*return*/\n            , epochSize.toNumber()];\n        }\n      });\n    });\n  };\n\n  ContractKit.prototype.getFirstBlockNumberForEpoch = function (epochNumber) {\n    return __awaiter(this, void 0, void 0, function () {\n      var epochSize;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.getEpochSize() // Follows GetEpochFirstBlockNumber from celo-blockchain/blob/master/consensus/istanbul/utils.go\n            ];\n\n          case 1:\n            epochSize = _a.sent(); // Follows GetEpochFirstBlockNumber from celo-blockchain/blob/master/consensus/istanbul/utils.go\n\n            if (epochNumber === 0) {\n              // No first block for epoch 0\n              return [2\n              /*return*/\n              , 0];\n            }\n\n            return [2\n            /*return*/\n            , (epochNumber - 1) * epochSize + 1];\n        }\n      });\n    });\n  };\n\n  ContractKit.prototype.getLastBlockNumberForEpoch = function (epochNumber) {\n    return __awaiter(this, void 0, void 0, function () {\n      var epochSize, firstBlockNumberForEpoch;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.getEpochSize() // Follows GetEpochLastBlockNumber from celo-blockchain/blob/master/consensus/istanbul/utils.go\n            ];\n\n          case 1:\n            epochSize = _a.sent(); // Follows GetEpochLastBlockNumber from celo-blockchain/blob/master/consensus/istanbul/utils.go\n\n            if (epochNumber === 0) {\n              return [2\n              /*return*/\n              , 0];\n            }\n\n            return [4\n            /*yield*/\n            , this.getFirstBlockNumberForEpoch(epochNumber)];\n\n          case 2:\n            firstBlockNumberForEpoch = _a.sent();\n            return [2\n            /*return*/\n            , firstBlockNumberForEpoch + (epochSize - 1)];\n        }\n      });\n    });\n  };\n\n  ContractKit.prototype.getEpochNumberOfBlock = function (blockNumber) {\n    return __awaiter(this, void 0, void 0, function () {\n      var epochSize, epochNumber;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.getEpochSize() // Follows GetEpochNumber from celo-blockchain/blob/master/consensus/istanbul/utils.go\n            ];\n\n          case 1:\n            epochSize = _a.sent();\n            epochNumber = Math.floor(blockNumber / epochSize);\n\n            if (blockNumber % epochSize === 0) {\n              return [2\n              /*return*/\n              , epochNumber];\n            } else {\n              return [2\n              /*return*/\n              , epochNumber + 1];\n            }\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  }; // *** NOTICE ***\n  // Next functions exists for backwards compatibility\n  // These should be consumed via connection to avoid future deprecation issues\n\n\n  ContractKit.prototype.addAccount = function (privateKey) {\n    this.connection.addAccount(privateKey);\n  };\n\n  Object.defineProperty(ContractKit.prototype, \"defaultAccount\", {\n    get: function () {\n      return this.connection.defaultAccount;\n    },\n    set: function (address) {\n      this.connection.defaultAccount = address;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ContractKit.prototype, \"gasInflationFactor\", {\n    get: function () {\n      return this.connection.defaultGasInflationFactor;\n    },\n    set: function (factor) {\n      this.connection.defaultGasInflationFactor = factor;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ContractKit.prototype, \"gasPrice\", {\n    get: function () {\n      return this.connection.defaultGasPrice;\n    },\n    set: function (price) {\n      this.connection.defaultGasPrice = price;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ContractKit.prototype, \"defaultFeeCurrency\", {\n    get: function () {\n      return this.connection.defaultFeeCurrency;\n    },\n    set: function (address) {\n      this.connection.defaultFeeCurrency = address;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  ContractKit.prototype.isListening = function () {\n    return this.connection.isListening();\n  };\n\n  ContractKit.prototype.isSyncing = function () {\n    return this.connection.isSyncing();\n  };\n\n  ContractKit.prototype.fillGasPrice = function (tx) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!(tx.feeCurrency && tx.gasPrice === '0')) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , this.updateGasPriceInConnectionLayer(tx.feeCurrency)];\n\n          case 1:\n            _a.sent();\n\n            _a.label = 2;\n\n          case 2:\n            return [2\n            /*return*/\n            , this.connection.fillGasPrice(tx)];\n        }\n      });\n    });\n  };\n\n  ContractKit.prototype.sendTransaction = function (tx) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , this.connection.sendTransaction(tx)];\n      });\n    });\n  };\n\n  ContractKit.prototype.sendTransactionObject = function (txObj, tx) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , this.connection.sendTransactionObject(txObj, tx)];\n      });\n    });\n  };\n\n  ContractKit.prototype.signTypedData = function (signer, typedData) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , this.connection.signTypedData(signer, typedData)];\n      });\n    });\n  };\n\n  ContractKit.prototype.stop = function () {\n    this.connection.stop();\n  };\n\n  Object.defineProperty(ContractKit.prototype, \"web3\", {\n    get: function () {\n      return this.connection.web3;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return ContractKit;\n}();\n\nexports.ContractKit = ContractKit;","map":{"version":3,"sources":["../src/kit.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ContractKit = exports.newKitFromWeb3 = exports.newKitWithApiKey = exports.newKit = exports.API_KEY_HEADER_KEY = void 0;\nvar connect_1 = require(\"@celo/connect\");\nvar wallet_local_1 = require(\"@celo/wallet-local\");\nvar bignumber_js_1 = require(\"bignumber.js\");\nvar net_1 = __importDefault(require(\"net\"));\nvar web3_1 = __importDefault(require(\"web3\"));\nvar address_registry_1 = require(\"./address-registry\");\nvar base_1 = require(\"./base\");\nvar celo_tokens_1 = require(\"./celo-tokens\");\nvar contract_cache_1 = require(\"./contract-cache\");\nvar web3_contract_cache_1 = require(\"./web3-contract-cache\");\nexports.API_KEY_HEADER_KEY = 'apiKey';\n/**\n * Creates a new instance of `ContractKit` given a nodeUrl\n * @param url CeloBlockchain node url\n * @optional wallet to reuse or add a wallet different than the default (example ledger-wallet)\n * @optional options to pass to the Web3 HttpProvider constructor\n */\nfunction newKit(url, wallet, options) {\n    var web3;\n    if (url.endsWith('.ipc')) {\n        web3 = new web3_1.default(new web3_1.default.providers.IpcProvider(url, net_1.default));\n    }\n    else if (url.toLowerCase().startsWith('http')) {\n        web3 = new web3_1.default(new web3_1.default.providers.HttpProvider(url, options));\n    }\n    else {\n        web3 = new web3_1.default(url);\n    }\n    return newKitFromWeb3(web3, wallet);\n}\nexports.newKit = newKit;\n/**\n * Creates a new instance of `ContractKit` given a nodeUrl and apiKey\n * @param url CeloBlockchain node url\n * @param apiKey to include in the http request header\n * @optional wallet to reuse or add a wallet different than the default (example ledger-wallet)\n */\nfunction newKitWithApiKey(url, apiKey, wallet) {\n    var options = {};\n    options.headers = [];\n    options.headers.push({\n        name: exports.API_KEY_HEADER_KEY,\n        value: apiKey,\n    });\n    return newKit(url, wallet, options);\n}\nexports.newKitWithApiKey = newKitWithApiKey;\n/**\n * Creates a new instance of the `ContractKit` with a web3 instance\n * @param web3 Web3 instance\n */\nfunction newKitFromWeb3(web3, wallet) {\n    if (wallet === void 0) { wallet = new wallet_local_1.LocalWallet(); }\n    if (!web3.currentProvider) {\n        throw new Error('Must have a valid Provider');\n    }\n    return new ContractKit(new connect_1.Connection(web3, wallet));\n}\nexports.newKitFromWeb3 = newKitFromWeb3;\nvar ContractKit = /** @class */ (function () {\n    function ContractKit(connection) {\n        var _this = this;\n        this.connection = connection;\n        // TODO: remove once cUSD gasPrice is available on minimumClientVersion node rpc\n        this.gasPriceSuggestionMultiplier = 5;\n        this.getHumanReadableNetworkConfig = function () { return _this.getNetworkConfig(true); };\n        this.registry = new address_registry_1.AddressRegistry(this);\n        this._web3Contracts = new web3_contract_cache_1.Web3ContractCache(this);\n        this.contracts = new contract_cache_1.WrapperCache(this);\n        this.celoTokens = new celo_tokens_1.CeloTokens(this);\n    }\n    ContractKit.prototype.getWallet = function () {\n        return this.connection.wallet;\n    };\n    ContractKit.prototype.getTotalBalance = function (address) {\n        return __awaiter(this, void 0, void 0, function () {\n            var lockedCelo, lockedBalance, pending, err_1, _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0: return [4 /*yield*/, this.contracts.getLockedGold()];\n                    case 1:\n                        lockedCelo = _b.sent();\n                        return [4 /*yield*/, lockedCelo.getAccountTotalLockedGold(address)];\n                    case 2:\n                        lockedBalance = _b.sent();\n                        pending = new bignumber_js_1.BigNumber(0);\n                        _b.label = 3;\n                    case 3:\n                        _b.trys.push([3, 5, , 6]);\n                        return [4 /*yield*/, lockedCelo.getPendingWithdrawalsTotalValue(address)];\n                    case 4:\n                        pending = _b.sent();\n                        return [3 /*break*/, 6];\n                    case 5:\n                        err_1 = _b.sent();\n                        return [3 /*break*/, 6];\n                    case 6:\n                        _a = [{ lockedCELO: lockedBalance, pending: pending }];\n                        return [4 /*yield*/, this.celoTokens.balancesOf(address)];\n                    case 7: return [2 /*return*/, __assign.apply(void 0, _a.concat([(_b.sent())]))];\n                }\n            });\n        });\n    };\n    ContractKit.prototype.getNetworkConfig = function (humanReadable) {\n        if (humanReadable === void 0) { humanReadable = false; }\n        return __awaiter(this, void 0, void 0, function () {\n            var configContracts, configMethod, configArray, configMap;\n            var _a;\n            var _this = this;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        configContracts = [\n                            base_1.CeloContract.Election,\n                            base_1.CeloContract.Attestations,\n                            base_1.CeloContract.Governance,\n                            base_1.CeloContract.LockedGold,\n                            base_1.CeloContract.SortedOracles,\n                            base_1.CeloContract.GasPriceMinimum,\n                            base_1.CeloContract.Reserve,\n                            base_1.CeloContract.Validators,\n                            base_1.CeloContract.DowntimeSlasher,\n                            base_1.CeloContract.BlockchainParameters,\n                            base_1.CeloContract.EpochRewards,\n                            base_1.CeloContract.GrandaMento,\n                        ];\n                        configMethod = function (contract) { return __awaiter(_this, void 0, void 0, function () {\n                            var configContractWrapper, e_1;\n                            return __generator(this, function (_a) {\n                                switch (_a.label) {\n                                    case 0:\n                                        _a.trys.push([0, 2, , 3]);\n                                        return [4 /*yield*/, this.contracts.getContract(contract)];\n                                    case 1:\n                                        configContractWrapper = _a.sent();\n                                        if (humanReadable && 'getHumanReadableConfig' in configContractWrapper) {\n                                            return [2 /*return*/, configContractWrapper.getHumanReadableConfig()];\n                                        }\n                                        else if ('getConfig' in configContractWrapper) {\n                                            return [2 /*return*/, configContractWrapper.getConfig()];\n                                        }\n                                        else {\n                                            throw new Error('No config endpoint found');\n                                        }\n                                        return [3 /*break*/, 3];\n                                    case 2:\n                                        e_1 = _a.sent();\n                                        return [2 /*return*/, new Error(\"Failed to fetch config for contract \" + contract + \": \\n\" + e_1)];\n                                    case 3: return [2 /*return*/];\n                                }\n                            });\n                        }); };\n                        return [4 /*yield*/, Promise.all(configContracts.map(configMethod))];\n                    case 1:\n                        configArray = _b.sent();\n                        configMap = {};\n                        configArray.forEach(function (config, index) { return (configMap[configContracts[index]] = config); });\n                        _a = {};\n                        return [4 /*yield*/, this.celoTokens.getExchangesConfigs(humanReadable)];\n                    case 2:\n                        _a.exchanges = _b.sent();\n                        return [4 /*yield*/, this.celoTokens.getStablesConfigs(humanReadable)];\n                    case 3: return [2 /*return*/, __assign.apply(void 0, [(_a.stableTokens = _b.sent(), _a), configMap])];\n                }\n            });\n        });\n    };\n    /**\n     * Set CeloToken to use to pay for gas fees\n     * @param tokenContract CELO (GoldToken) or a supported StableToken contract\n     */\n    ContractKit.prototype.setFeeCurrency = function (tokenContract) {\n        return __awaiter(this, void 0, void 0, function () {\n            var address, _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tokenContract === base_1.CeloContract.GoldToken)) return [3 /*break*/, 1];\n                        _a = undefined;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.registry.addressFor(tokenContract)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        address = _a;\n                        if (!address) return [3 /*break*/, 5];\n                        return [4 /*yield*/, this.updateGasPriceInConnectionLayer(address)];\n                    case 4:\n                        _b.sent();\n                        _b.label = 5;\n                    case 5:\n                        this.connection.defaultFeeCurrency = address;\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    // TODO: remove once cUSD gasPrice is available on minimumClientVersion node rpc\n    ContractKit.prototype.updateGasPriceInConnectionLayer = function (currency) {\n        return __awaiter(this, void 0, void 0, function () {\n            var gasPriceMinimum, rawGasPrice, gasPrice;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.contracts.getGasPriceMinimum()];\n                    case 1:\n                        gasPriceMinimum = _a.sent();\n                        return [4 /*yield*/, gasPriceMinimum.getGasPriceMinimum(currency)];\n                    case 2:\n                        rawGasPrice = _a.sent();\n                        gasPrice = rawGasPrice.multipliedBy(this.gasPriceSuggestionMultiplier).toFixed();\n                        return [4 /*yield*/, this.connection.setGasPriceForCurrency(currency, gasPrice)];\n                    case 3:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    ContractKit.prototype.getEpochSize = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var validators, epochSize;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.contracts.getValidators()];\n                    case 1:\n                        validators = _a.sent();\n                        return [4 /*yield*/, validators.getEpochSize()];\n                    case 2:\n                        epochSize = _a.sent();\n                        return [2 /*return*/, epochSize.toNumber()];\n                }\n            });\n        });\n    };\n    ContractKit.prototype.getFirstBlockNumberForEpoch = function (epochNumber) {\n        return __awaiter(this, void 0, void 0, function () {\n            var epochSize;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getEpochSize()\n                        // Follows GetEpochFirstBlockNumber from celo-blockchain/blob/master/consensus/istanbul/utils.go\n                    ];\n                    case 1:\n                        epochSize = _a.sent();\n                        // Follows GetEpochFirstBlockNumber from celo-blockchain/blob/master/consensus/istanbul/utils.go\n                        if (epochNumber === 0) {\n                            // No first block for epoch 0\n                            return [2 /*return*/, 0];\n                        }\n                        return [2 /*return*/, (epochNumber - 1) * epochSize + 1];\n                }\n            });\n        });\n    };\n    ContractKit.prototype.getLastBlockNumberForEpoch = function (epochNumber) {\n        return __awaiter(this, void 0, void 0, function () {\n            var epochSize, firstBlockNumberForEpoch;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getEpochSize()\n                        // Follows GetEpochLastBlockNumber from celo-blockchain/blob/master/consensus/istanbul/utils.go\n                    ];\n                    case 1:\n                        epochSize = _a.sent();\n                        // Follows GetEpochLastBlockNumber from celo-blockchain/blob/master/consensus/istanbul/utils.go\n                        if (epochNumber === 0) {\n                            return [2 /*return*/, 0];\n                        }\n                        return [4 /*yield*/, this.getFirstBlockNumberForEpoch(epochNumber)];\n                    case 2:\n                        firstBlockNumberForEpoch = _a.sent();\n                        return [2 /*return*/, firstBlockNumberForEpoch + (epochSize - 1)];\n                }\n            });\n        });\n    };\n    ContractKit.prototype.getEpochNumberOfBlock = function (blockNumber) {\n        return __awaiter(this, void 0, void 0, function () {\n            var epochSize, epochNumber;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getEpochSize()\n                        // Follows GetEpochNumber from celo-blockchain/blob/master/consensus/istanbul/utils.go\n                    ];\n                    case 1:\n                        epochSize = _a.sent();\n                        epochNumber = Math.floor(blockNumber / epochSize);\n                        if (blockNumber % epochSize === 0) {\n                            return [2 /*return*/, epochNumber];\n                        }\n                        else {\n                            return [2 /*return*/, epochNumber + 1];\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    // *** NOTICE ***\n    // Next functions exists for backwards compatibility\n    // These should be consumed via connection to avoid future deprecation issues\n    ContractKit.prototype.addAccount = function (privateKey) {\n        this.connection.addAccount(privateKey);\n    };\n    Object.defineProperty(ContractKit.prototype, \"defaultAccount\", {\n        get: function () {\n            return this.connection.defaultAccount;\n        },\n        set: function (address) {\n            this.connection.defaultAccount = address;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ContractKit.prototype, \"gasInflationFactor\", {\n        get: function () {\n            return this.connection.defaultGasInflationFactor;\n        },\n        set: function (factor) {\n            this.connection.defaultGasInflationFactor = factor;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ContractKit.prototype, \"gasPrice\", {\n        get: function () {\n            return this.connection.defaultGasPrice;\n        },\n        set: function (price) {\n            this.connection.defaultGasPrice = price;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ContractKit.prototype, \"defaultFeeCurrency\", {\n        get: function () {\n            return this.connection.defaultFeeCurrency;\n        },\n        set: function (address) {\n            this.connection.defaultFeeCurrency = address;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ContractKit.prototype.isListening = function () {\n        return this.connection.isListening();\n    };\n    ContractKit.prototype.isSyncing = function () {\n        return this.connection.isSyncing();\n    };\n    ContractKit.prototype.fillGasPrice = function (tx) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(tx.feeCurrency && tx.gasPrice === '0')) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.updateGasPriceInConnectionLayer(tx.feeCurrency)];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2: return [2 /*return*/, this.connection.fillGasPrice(tx)];\n                }\n            });\n        });\n    };\n    ContractKit.prototype.sendTransaction = function (tx) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.connection.sendTransaction(tx)];\n            });\n        });\n    };\n    ContractKit.prototype.sendTransactionObject = function (txObj, tx) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.connection.sendTransactionObject(txObj, tx)];\n            });\n        });\n    };\n    ContractKit.prototype.signTypedData = function (signer, typedData) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.connection.signTypedData(signer, typedData)];\n            });\n        });\n    };\n    ContractKit.prototype.stop = function () {\n        this.connection.stop();\n    };\n    Object.defineProperty(ContractKit.prototype, \"web3\", {\n        get: function () {\n            return this.connection.web3;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return ContractKit;\n}());\nexports.ContractKit = ContractKit;\n//# sourceMappingURL=kit.js.map"]},"metadata":{},"sourceType":"script"}