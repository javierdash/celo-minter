{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.contractKitReducer = void 0;\n\nvar connectors_1 = require(\"./connectors\");\n\nvar constants_1 = require(\"./constants\");\n\nvar helpers_1 = require(\"./utils/helpers\");\n\nvar localStorage_1 = __importDefault(require(\"./utils/localStorage\"));\n\nfunction contractKitReducer(state, action) {\n  var _a;\n\n  var _b;\n\n  switch (action.type) {\n    case 'decrementPendingActionCount':\n      return __assign(__assign({}, state), {\n        pendingActionCount: state.pendingActionCount - 1\n      });\n\n    case 'setAddress':\n      if (action.payload === state.address) {\n        return state;\n      }\n\n      if (action.payload) {\n        localStorage_1.default.setItem(constants_1.localStorageKeys.lastUsedAddress, action.payload);\n      } else {\n        localStorage_1.default.removeItem(constants_1.localStorageKeys.lastUsedAddress);\n      }\n\n      return __assign(__assign({}, state), {\n        address: action.payload\n      });\n\n    case 'setNetwork':\n      if (action.payload === state.network) {\n        return state;\n      }\n\n      localStorage_1.default.setItem(constants_1.localStorageKeys.lastUsedNetwork, action.payload.name);\n      return __assign(__assign({}, state), {\n        network: action.payload\n      });\n\n    case 'setConnector':\n      localStorage_1.default.removeItem(constants_1.localStorageKeys.lastUsedAddress);\n      return __assign(__assign({}, state), {\n        connector: action.payload,\n        connectorInitError: null,\n        address: null\n      });\n\n    case 'setFeeCurrency':\n      if (action.payload === state.feeCurrency) {\n        return state;\n      }\n\n      return __assign(__assign({}, state), {\n        feeCurrency: action.payload\n      });\n\n    case 'initialisedConnector':\n      {\n        var newConnector = action.payload;\n        var address = (_b = newConnector.kit.defaultAccount) !== null && _b !== void 0 ? _b : null;\n\n        if (address) {\n          localStorage_1.default.setItem(constants_1.localStorageKeys.lastUsedAddress, address);\n        }\n\n        return __assign(__assign({}, state), {\n          connector: action.payload,\n          address: address\n        });\n      }\n\n    case 'destroy':\n      (0, helpers_1.clearPreviousConfig)();\n      return __assign(__assign({}, state), {\n        address: null,\n        connector: new connectors_1.UnauthenticatedConnector(state.network)\n      });\n\n    default:\n      // This checks to see if the action type is `set<fieldname>`\n      if (action.type.slice(0, 3) === 'set') {\n        // This builds the proper camel-case field name from the action type\n        // e.g., setFieldName -> fieldName\n        var key = \"\".concat(action.type.charAt(3).toLowerCase()).concat(action.type.slice(4));\n        return __assign(__assign({}, state), (_a = {}, _a[key] = action.payload, _a));\n      } else {\n        console.error(new Error(\"Unrecognized action type \".concat(action.type, \" in contractKitReducer\")));\n      }\n\n      return state;\n  }\n}\n\nexports.contractKitReducer = contractKitReducer;","map":{"version":3,"sources":["../src/contract-kit-reducer.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.contractKitReducer = void 0;\nvar connectors_1 = require(\"./connectors\");\nvar constants_1 = require(\"./constants\");\nvar helpers_1 = require(\"./utils/helpers\");\nvar localStorage_1 = __importDefault(require(\"./utils/localStorage\"));\nfunction contractKitReducer(state, action) {\n    var _a;\n    var _b;\n    switch (action.type) {\n        case 'decrementPendingActionCount':\n            return __assign(__assign({}, state), { pendingActionCount: state.pendingActionCount - 1 });\n        case 'setAddress':\n            if (action.payload === state.address) {\n                return state;\n            }\n            if (action.payload) {\n                localStorage_1.default.setItem(constants_1.localStorageKeys.lastUsedAddress, action.payload);\n            }\n            else {\n                localStorage_1.default.removeItem(constants_1.localStorageKeys.lastUsedAddress);\n            }\n            return __assign(__assign({}, state), { address: action.payload });\n        case 'setNetwork':\n            if (action.payload === state.network) {\n                return state;\n            }\n            localStorage_1.default.setItem(constants_1.localStorageKeys.lastUsedNetwork, action.payload.name);\n            return __assign(__assign({}, state), { network: action.payload });\n        case 'setConnector':\n            localStorage_1.default.removeItem(constants_1.localStorageKeys.lastUsedAddress);\n            return __assign(__assign({}, state), { connector: action.payload, connectorInitError: null, address: null });\n        case 'setFeeCurrency':\n            if (action.payload === state.feeCurrency) {\n                return state;\n            }\n            return __assign(__assign({}, state), { feeCurrency: action.payload });\n        case 'initialisedConnector': {\n            var newConnector = action.payload;\n            var address = (_b = newConnector.kit.defaultAccount) !== null && _b !== void 0 ? _b : null;\n            if (address) {\n                localStorage_1.default.setItem(constants_1.localStorageKeys.lastUsedAddress, address);\n            }\n            return __assign(__assign({}, state), { connector: action.payload, address: address });\n        }\n        case 'destroy':\n            (0, helpers_1.clearPreviousConfig)();\n            return __assign(__assign({}, state), { address: null, connector: new connectors_1.UnauthenticatedConnector(state.network) });\n        default:\n            // This checks to see if the action type is `set<fieldname>`\n            if (action.type.slice(0, 3) === 'set') {\n                // This builds the proper camel-case field name from the action type\n                // e.g., setFieldName -> fieldName\n                var key = \"\".concat(action.type.charAt(3).toLowerCase()).concat(action.type.slice(4));\n                return __assign(__assign({}, state), (_a = {}, _a[key] = action.payload, _a));\n            }\n            else {\n                console.error(new Error(\"Unrecognized action type \".concat(action.type, \" in contractKitReducer\")));\n            }\n            return state;\n    }\n}\nexports.contractKitReducer = contractKitReducer;\n//# sourceMappingURL=contract-kit-reducer.js.map"]},"metadata":{},"sourceType":"script"}