{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nvar _a, _b;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.switchToCeloNetwork = exports.addNetworksToMetamask = exports.addNetworkToMetamask = exports.addTokensToMetamask = exports.makeAddCeloTokensParams = exports.tokenToParam = exports.makeNetworkParams = exports.MetamaskRPCErrorCode = void 0;\n\nvar contractkit_1 = require(\"@celo/contractkit\");\n\nvar web3_1 = __importDefault(require(\"web3\"));\n\nvar constants_1 = require(\"../constants\");\n\nvar types_1 = require(\"../types\");\n\nvar CELO_PARAMS = Object.freeze({\n  chainName: 'Celo',\n  testnet: false,\n  nativeCurrency: {\n    name: 'CELO'\n  }\n});\nvar ALFAJORES_PARAMS = Object.freeze({\n  chainName: 'Alfajores Testnet',\n  testnet: true,\n  nativeCurrency: {\n    name: 'A-CELO'\n  }\n});\nvar BAKLAVA_PARAMS = Object.freeze({\n  chainName: 'Baklava Testnet',\n  testnet: true,\n  nativeCurrency: {\n    name: 'B-CELO'\n  }\n});\nvar params = (_a = {}, _a[types_1.ChainId.Mainnet] = CELO_PARAMS, _a[types_1.ChainId.Alfajores] = ALFAJORES_PARAMS, _a[types_1.ChainId.Baklava] = BAKLAVA_PARAMS, _a);\nvar NETWORKS = (_b = {}, _b[types_1.ChainId.Mainnet] = constants_1.Mainnet, _b[types_1.ChainId.Alfajores] = constants_1.Alfajores, _b[types_1.ChainId.Baklava] = constants_1.Baklava, _b);\nvar MetamaskRPCErrorCode;\n\n(function (MetamaskRPCErrorCode) {\n  MetamaskRPCErrorCode[MetamaskRPCErrorCode[\"AwaitingUserConfirmation\"] = -32002] = \"AwaitingUserConfirmation\";\n  MetamaskRPCErrorCode[MetamaskRPCErrorCode[\"UnknownNetwork\"] = 4902] = \"UnknownNetwork\";\n})(MetamaskRPCErrorCode = exports.MetamaskRPCErrorCode || (exports.MetamaskRPCErrorCode = {}));\n\nvar makeNetworkParams = function (info, CELO) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, symbol, decimals;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4\n          /*yield*/\n          , Promise.all([CELO.symbol(), CELO.decimals()])];\n\n        case 1:\n          _a = __read.apply(void 0, [_c.sent(), 2]), symbol = _a[0], decimals = _a[1];\n          return [2\n          /*return*/\n          , {\n            chainId: \"0x\".concat(info.chainId.toString(16)),\n            chainName: (_b = params[info.chainId].chainName) !== null && _b !== void 0 ? _b : info.name,\n            nativeCurrency: {\n              name: params[info.chainId].nativeCurrency.name,\n              symbol: symbol,\n              decimals: decimals\n            },\n            rpcUrls: [info.rpcUrl],\n            blockExplorerUrls: [info.explorer],\n            iconUrls: [\"https://celoreserve.org/assets/tokens/\".concat(symbol, \".svg\")] // unfortunately unused\n\n          }];\n      }\n    });\n  });\n};\n\nexports.makeNetworkParams = makeNetworkParams;\n\nvar tokenToParam = function (token) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, symbol, decimals, name;\n\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          return [4\n          /*yield*/\n          , Promise.all([token.symbol(), token.decimals(), token.name()])];\n\n        case 1:\n          _a = __read.apply(void 0, [_b.sent(), 3]), symbol = _a[0], decimals = _a[1], name = _a[2];\n          return [2\n          /*return*/\n          , {\n            type: 'ERC20',\n            options: {\n              address: token.address,\n              name: name,\n              symbol: symbol,\n              decimals: decimals,\n              image: \"https://celoreserve.org/assets/tokens/\".concat(symbol, \".svg\")\n            }\n          }];\n      }\n    });\n  });\n};\n\nexports.tokenToParam = tokenToParam;\n\nvar makeAddCeloTokensParams = function (tokens) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n      return [2\n      /*return*/\n      , Promise.all(Object.values(tokens).map(exports.tokenToParam))];\n    });\n  });\n};\n\nexports.makeAddCeloTokensParams = makeAddCeloTokensParams;\n\nvar addTokensToMetamask = function (ethereum, tokens) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var tokenParams, added;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          return [4\n          /*yield*/\n          , (0, exports.makeAddCeloTokensParams)(tokens)];\n\n        case 1:\n          tokenParams = _a.sent();\n          return [4\n          /*yield*/\n          , Promise.all(tokenParams.map(function (params) {\n            return ethereum === null || ethereum === void 0 ? void 0 : ethereum.request({\n              method: 'wallet_watchAsset',\n              params: params\n            });\n          }))];\n\n        case 2:\n          added = _a.sent().every(Boolean);\n          return [2\n          /*return*/\n          , added];\n      }\n    });\n  });\n};\n\nexports.addTokensToMetamask = addTokensToMetamask;\n\nvar addNetworkToMetamask = function (ethereum, networkConfig) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, CELO, tokens, _b, _c, _d, err_1, code;\n\n    var _e;\n\n    return __generator(this, function (_f) {\n      switch (_f.label) {\n        case 0:\n          return [4\n          /*yield*/\n          , (0, contractkit_1.newKit)(networkConfig.rpcUrl).celoTokens.getWrappers()];\n\n        case 1:\n          _a = _f.sent(), CELO = _a.CELO, tokens = __rest(_a, [\"CELO\"]);\n\n          if (!CELO) {\n            throw new Error(\"Couldnt fetch CELO information for \".concat(networkConfig.name, \". Something's wrong\"));\n          }\n\n          _f.label = 2;\n\n        case 2:\n          _f.trys.push([2, 8,, 9]);\n\n          if (!(ethereum === null || ethereum === void 0)) return [3\n          /*break*/\n          , 3];\n          _b = void 0;\n          return [3\n          /*break*/\n          , 5];\n\n        case 3:\n          _d = (_c = ethereum).request;\n          _e = {\n            method: 'wallet_addEthereumChain'\n          };\n          return [4\n          /*yield*/\n          , (0, exports.makeNetworkParams)(networkConfig, CELO)];\n\n        case 4:\n          _b = _d.apply(_c, [(_e.params = [_f.sent()], _e)]);\n          _f.label = 5;\n\n        case 5:\n          return [4\n          /*yield*/\n          , _b];\n\n        case 6:\n          _f.sent();\n\n          return [4\n          /*yield*/\n          , (0, exports.addTokensToMetamask)(ethereum, tokens)];\n\n        case 7:\n          _f.sent();\n\n          return [3\n          /*break*/\n          , 9];\n\n        case 8:\n          err_1 = _f.sent();\n          code = err_1.code;\n\n          if (code === MetamaskRPCErrorCode.AwaitingUserConfirmation) {\n            // user has already been requested to add the network\n            // maybe add a user CTA\n            throw new Error(\"Please check your Metamask window to add \".concat(networkConfig.name, \" to Metamask\"));\n          } else {\n            throw err_1;\n          }\n\n          return [3\n          /*break*/\n          , 9];\n\n        case 9:\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n};\n\nexports.addNetworkToMetamask = addNetworkToMetamask;\n\nfunction addNetworksToMetamask(ethereum) {\n  return __awaiter(this, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          return [4\n          /*yield*/\n          , Promise.all(Object.values(NETWORKS).map(function (network) {\n            return (0, exports.addNetworkToMetamask)(ethereum, network);\n          }))];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n}\n\nexports.addNetworksToMetamask = addNetworksToMetamask;\n\nfunction switchToCeloNetwork(kit, network, ethereum) {\n  return __awaiter(this, void 0, void 0, function () {\n    var web3, chainId, err_2, code;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          web3 = new web3_1.default(ethereum);\n          return [4\n          /*yield*/\n          , web3.eth.getChainId()];\n\n        case 1:\n          chainId = _a.sent();\n          if (!(network.chainId !== chainId)) return [3\n          /*break*/\n          , 8];\n          _a.label = 2;\n\n        case 2:\n          _a.trys.push([2, 4,, 8]);\n\n          return [4\n          /*yield*/\n          , ethereum.request({\n            method: 'wallet_switchEthereumChain',\n            params: [{\n              chainId: \"0x\".concat(network.chainId.toString(16))\n            }]\n          })];\n\n        case 3:\n          _a.sent();\n\n          return [3\n          /*break*/\n          , 8];\n\n        case 4:\n          err_2 = _a.sent();\n          code = err_2.code;\n          if (!(code === MetamaskRPCErrorCode.UnknownNetwork)) return [3\n          /*break*/\n          , 6]; // ChainId not yet added to metamask\n\n          return [4\n          /*yield*/\n          , (0, exports.addNetworkToMetamask)(ethereum, network)];\n\n        case 5:\n          // ChainId not yet added to metamask\n          _a.sent();\n\n          return [2\n          /*return*/\n          , switchToCeloNetwork(kit, network, ethereum)];\n\n        case 6:\n          if (code === MetamaskRPCErrorCode.AwaitingUserConfirmation) {\n            // user has already been requested to switch the network\n            return [2\n            /*return*/\n            ];\n          } else {\n            throw err_2;\n          }\n\n          _a.label = 7;\n\n        case 7:\n          return [3\n          /*break*/\n          , 8];\n\n        case 8:\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n}\n\nexports.switchToCeloNetwork = switchToCeloNetwork;","map":{"version":3,"sources":["../../src/utils/metamask.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _a, _b;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.switchToCeloNetwork = exports.addNetworksToMetamask = exports.addNetworkToMetamask = exports.addTokensToMetamask = exports.makeAddCeloTokensParams = exports.tokenToParam = exports.makeNetworkParams = exports.MetamaskRPCErrorCode = void 0;\nvar contractkit_1 = require(\"@celo/contractkit\");\nvar web3_1 = __importDefault(require(\"web3\"));\nvar constants_1 = require(\"../constants\");\nvar types_1 = require(\"../types\");\nvar CELO_PARAMS = Object.freeze({\n    chainName: 'Celo',\n    testnet: false,\n    nativeCurrency: {\n        name: 'CELO',\n    },\n});\nvar ALFAJORES_PARAMS = Object.freeze({\n    chainName: 'Alfajores Testnet',\n    testnet: true,\n    nativeCurrency: {\n        name: 'A-CELO',\n    },\n});\nvar BAKLAVA_PARAMS = Object.freeze({\n    chainName: 'Baklava Testnet',\n    testnet: true,\n    nativeCurrency: {\n        name: 'B-CELO',\n    },\n});\nvar params = (_a = {},\n    _a[types_1.ChainId.Mainnet] = CELO_PARAMS,\n    _a[types_1.ChainId.Alfajores] = ALFAJORES_PARAMS,\n    _a[types_1.ChainId.Baklava] = BAKLAVA_PARAMS,\n    _a);\nvar NETWORKS = (_b = {},\n    _b[types_1.ChainId.Mainnet] = constants_1.Mainnet,\n    _b[types_1.ChainId.Alfajores] = constants_1.Alfajores,\n    _b[types_1.ChainId.Baklava] = constants_1.Baklava,\n    _b);\nvar MetamaskRPCErrorCode;\n(function (MetamaskRPCErrorCode) {\n    MetamaskRPCErrorCode[MetamaskRPCErrorCode[\"AwaitingUserConfirmation\"] = -32002] = \"AwaitingUserConfirmation\";\n    MetamaskRPCErrorCode[MetamaskRPCErrorCode[\"UnknownNetwork\"] = 4902] = \"UnknownNetwork\";\n})(MetamaskRPCErrorCode = exports.MetamaskRPCErrorCode || (exports.MetamaskRPCErrorCode = {}));\nvar makeNetworkParams = function (info, CELO) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, symbol, decimals;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4 /*yield*/, Promise.all([\n                    CELO.symbol(),\n                    CELO.decimals(),\n                ])];\n            case 1:\n                _a = __read.apply(void 0, [_c.sent(), 2]), symbol = _a[0], decimals = _a[1];\n                return [2 /*return*/, {\n                        chainId: \"0x\".concat(info.chainId.toString(16)),\n                        chainName: (_b = params[info.chainId].chainName) !== null && _b !== void 0 ? _b : info.name,\n                        nativeCurrency: {\n                            name: params[info.chainId].nativeCurrency.name,\n                            symbol: symbol,\n                            decimals: decimals,\n                        },\n                        rpcUrls: [info.rpcUrl],\n                        blockExplorerUrls: [info.explorer],\n                        iconUrls: [\"https://celoreserve.org/assets/tokens/\".concat(symbol, \".svg\")], // unfortunately unused\n                    }];\n        }\n    });\n}); };\nexports.makeNetworkParams = makeNetworkParams;\nvar tokenToParam = function (token) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, symbol, decimals, name;\n    return __generator(this, function (_b) {\n        switch (_b.label) {\n            case 0: return [4 /*yield*/, Promise.all([\n                    token.symbol(),\n                    token.decimals(),\n                    token.name(),\n                ])];\n            case 1:\n                _a = __read.apply(void 0, [_b.sent(), 3]), symbol = _a[0], decimals = _a[1], name = _a[2];\n                return [2 /*return*/, {\n                        type: 'ERC20',\n                        options: {\n                            address: token.address,\n                            name: name,\n                            symbol: symbol,\n                            decimals: decimals,\n                            image: \"https://celoreserve.org/assets/tokens/\".concat(symbol, \".svg\"),\n                        },\n                    }];\n        }\n    });\n}); };\nexports.tokenToParam = tokenToParam;\nvar makeAddCeloTokensParams = function (tokens) { return __awaiter(void 0, void 0, void 0, function () { return __generator(this, function (_a) {\n    return [2 /*return*/, Promise.all(Object.values(tokens).map(exports.tokenToParam))];\n}); }); };\nexports.makeAddCeloTokensParams = makeAddCeloTokensParams;\nvar addTokensToMetamask = function (ethereum, tokens) { return __awaiter(void 0, void 0, void 0, function () {\n    var tokenParams, added;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0: return [4 /*yield*/, (0, exports.makeAddCeloTokensParams)(tokens)];\n            case 1:\n                tokenParams = _a.sent();\n                return [4 /*yield*/, Promise.all(tokenParams.map(function (params) {\n                        return ethereum === null || ethereum === void 0 ? void 0 : ethereum.request({\n                            method: 'wallet_watchAsset',\n                            params: params,\n                        });\n                    }))];\n            case 2:\n                added = (_a.sent()).every(Boolean);\n                return [2 /*return*/, added];\n        }\n    });\n}); };\nexports.addTokensToMetamask = addTokensToMetamask;\nvar addNetworkToMetamask = function (ethereum, networkConfig) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, CELO, tokens, _b, _c, _d, err_1, code;\n    var _e;\n    return __generator(this, function (_f) {\n        switch (_f.label) {\n            case 0: return [4 /*yield*/, (0, contractkit_1.newKit)(networkConfig.rpcUrl).celoTokens.getWrappers()];\n            case 1:\n                _a = (_f.sent()), CELO = _a.CELO, tokens = __rest(_a, [\"CELO\"]);\n                if (!CELO) {\n                    throw new Error(\"Couldnt fetch CELO information for \".concat(networkConfig.name, \". Something's wrong\"));\n                }\n                _f.label = 2;\n            case 2:\n                _f.trys.push([2, 8, , 9]);\n                if (!(ethereum === null || ethereum === void 0)) return [3 /*break*/, 3];\n                _b = void 0;\n                return [3 /*break*/, 5];\n            case 3:\n                _d = (_c = ethereum).request;\n                _e = {\n                    method: 'wallet_addEthereumChain'\n                };\n                return [4 /*yield*/, (0, exports.makeNetworkParams)(networkConfig, CELO)];\n            case 4:\n                _b = _d.apply(_c, [(_e.params = [_f.sent()],\n                        _e)]);\n                _f.label = 5;\n            case 5: return [4 /*yield*/, (_b)];\n            case 6:\n                _f.sent();\n                return [4 /*yield*/, (0, exports.addTokensToMetamask)(ethereum, tokens)];\n            case 7:\n                _f.sent();\n                return [3 /*break*/, 9];\n            case 8:\n                err_1 = _f.sent();\n                code = err_1.code;\n                if (code === MetamaskRPCErrorCode.AwaitingUserConfirmation) {\n                    // user has already been requested to add the network\n                    // maybe add a user CTA\n                    throw new Error(\"Please check your Metamask window to add \".concat(networkConfig.name, \" to Metamask\"));\n                }\n                else {\n                    throw err_1;\n                }\n                return [3 /*break*/, 9];\n            case 9: return [2 /*return*/];\n        }\n    });\n}); };\nexports.addNetworkToMetamask = addNetworkToMetamask;\nfunction addNetworksToMetamask(ethereum) {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, Promise.all(Object.values(NETWORKS).map(function (network) {\n                        return (0, exports.addNetworkToMetamask)(ethereum, network);\n                    }))];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\nexports.addNetworksToMetamask = addNetworksToMetamask;\nfunction switchToCeloNetwork(kit, network, ethereum) {\n    return __awaiter(this, void 0, void 0, function () {\n        var web3, chainId, err_2, code;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    web3 = new web3_1.default(ethereum);\n                    return [4 /*yield*/, web3.eth.getChainId()];\n                case 1:\n                    chainId = _a.sent();\n                    if (!(network.chainId !== chainId)) return [3 /*break*/, 8];\n                    _a.label = 2;\n                case 2:\n                    _a.trys.push([2, 4, , 8]);\n                    return [4 /*yield*/, ethereum.request({\n                            method: 'wallet_switchEthereumChain',\n                            params: [\n                                {\n                                    chainId: \"0x\".concat(network.chainId.toString(16)),\n                                },\n                            ],\n                        })];\n                case 3:\n                    _a.sent();\n                    return [3 /*break*/, 8];\n                case 4:\n                    err_2 = _a.sent();\n                    code = err_2.code;\n                    if (!(code === MetamaskRPCErrorCode.UnknownNetwork)) return [3 /*break*/, 6];\n                    // ChainId not yet added to metamask\n                    return [4 /*yield*/, (0, exports.addNetworkToMetamask)(ethereum, network)];\n                case 5:\n                    // ChainId not yet added to metamask\n                    _a.sent();\n                    return [2 /*return*/, switchToCeloNetwork(kit, network, ethereum)];\n                case 6:\n                    if (code === MetamaskRPCErrorCode.AwaitingUserConfirmation) {\n                        // user has already been requested to switch the network\n                        return [2 /*return*/];\n                    }\n                    else {\n                        throw err_2;\n                    }\n                    _a.label = 7;\n                case 7: return [3 /*break*/, 8];\n                case 8: return [2 /*return*/];\n            }\n        });\n    });\n}\nexports.switchToCeloNetwork = switchToCeloNetwork;\n//# sourceMappingURL=metamask.js.map"]},"metadata":{},"sourceType":"script"}