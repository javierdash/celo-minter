{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar _a, _b;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CeloTokens = exports.celoTokenInfos = exports.stableTokenInfos = exports.Token = exports.StableToken = void 0;\n\nvar base_1 = require(\"./base\");\n\nvar StableToken;\n\n(function (StableToken) {\n  StableToken[\"cUSD\"] = \"cUSD\";\n  StableToken[\"cEUR\"] = \"cEUR\";\n  StableToken[\"cREAL\"] = \"cREAL\";\n})(StableToken = exports.StableToken || (exports.StableToken = {}));\n\nvar Token;\n\n(function (Token) {\n  Token[\"CELO\"] = \"CELO\";\n})(Token = exports.Token || (exports.Token = {}));\n/** Basic info for each stable token */\n\n\nexports.stableTokenInfos = (_a = {}, _a[StableToken.cUSD] = {\n  contract: base_1.CeloContract.StableToken,\n  exchangeContract: base_1.CeloContract.Exchange,\n  symbol: StableToken.cUSD\n}, _a[StableToken.cEUR] = {\n  contract: base_1.CeloContract.StableTokenEUR,\n  exchangeContract: base_1.CeloContract.ExchangeEUR,\n  symbol: StableToken.cEUR\n}, _a[StableToken.cREAL] = {\n  contract: base_1.CeloContract.StableTokenBRL,\n  exchangeContract: base_1.CeloContract.ExchangeBRL,\n  symbol: StableToken.cREAL\n}, _a);\n/** Basic info for each supported celo token, including stable tokens */\n\nexports.celoTokenInfos = __assign((_b = {}, _b[Token.CELO] = {\n  contract: base_1.CeloContract.GoldToken,\n  symbol: Token.CELO\n}, _b), exports.stableTokenInfos);\n/**\n * A helper class to interact with all Celo tokens, ie CELO and stable tokens\n */\n\nvar CeloTokens =\n/** @class */\nfunction () {\n  function CeloTokens(kit) {\n    var _this = this;\n\n    this.kit = kit;\n    /**\n     * Gets the address of the contract for the provided token.\n     * @param token the token to get the (proxy) contract address for\n     * @return A promise resolving to the address of the token's contract\n     */\n\n    this.getAddress = function (token) {\n      return _this.kit.registry.addressFor(exports.celoTokenInfos[token].contract);\n    };\n  }\n  /**\n   * Gets an address's balance for each celo token.\n   * @param address the address to look up the balances for\n   * @return a promise resolving to an object containing the address's balance\n   *  for each celo token\n   */\n\n\n  CeloTokens.prototype.balancesOf = function (address) {\n    var _this = this;\n\n    return this.forEachCeloToken(function (info) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var wrapper;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , this.kit.contracts.getContract(info.contract)];\n\n            case 1:\n              wrapper = _a.sent();\n              return [2\n              /*return*/\n              , wrapper.balanceOf(address)];\n          }\n        });\n      });\n    });\n  };\n  /**\n   * Gets the wrapper for each celo token.\n   * @return an promise resolving to an object containing the wrapper for each celo token.\n   */\n\n\n  CeloTokens.prototype.getWrappers = function () {\n    var _this = this;\n\n    return this.forEachCeloToken(function (info) {\n      return _this.kit.contracts.getContract(info.contract);\n    });\n  };\n  /**\n   * Gets the address for each celo token proxy contract.\n   * @return an promise resolving to an object containing the address for each celo token proxy.\n   */\n\n\n  CeloTokens.prototype.getAddresses = function () {\n    var _this = this;\n\n    return this.forEachCeloToken(function (info) {\n      return _this.kit.registry.addressFor(info.contract);\n    });\n  };\n\n  CeloTokens.prototype.getStablesConfigs = function (humanReadable) {\n    if (humanReadable === void 0) {\n      humanReadable = false;\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , this.forStableCeloToken(function (info) {\n          return __awaiter(_this, void 0, void 0, function () {\n            var stableWrapper;\n            return __generator(this, function (_a) {\n              switch (_a.label) {\n                case 0:\n                  return [4\n                  /*yield*/\n                  , this.kit.contracts.getContract(info.contract)];\n\n                case 1:\n                  stableWrapper = _a.sent();\n\n                  if (humanReadable) {\n                    return [2\n                    /*return*/\n                    , stableWrapper.getHumanReadableConfig()];\n                  }\n\n                  return [2\n                  /*return*/\n                  , stableWrapper.getConfig()];\n              }\n            });\n          });\n        })];\n      });\n    });\n  };\n\n  CeloTokens.prototype.getExchangesConfigs = function (humanReadable) {\n    if (humanReadable === void 0) {\n      humanReadable = false;\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , this.forStableCeloToken(function (info) {\n          return __awaiter(_this, void 0, void 0, function () {\n            var exchangeWrapper;\n            return __generator(this, function (_a) {\n              switch (_a.label) {\n                case 0:\n                  return [4\n                  /*yield*/\n                  , this.kit.contracts.getContract(info.exchangeContract)];\n\n                case 1:\n                  exchangeWrapper = _a.sent();\n\n                  if (humanReadable) {\n                    return [2\n                    /*return*/\n                    , exchangeWrapper.getHumanReadableConfig()];\n                  }\n\n                  return [2\n                  /*return*/\n                  , exchangeWrapper.getConfig()];\n              }\n            });\n          });\n        })];\n      });\n    });\n  };\n  /**\n   * Runs fn for each celo token found in celoTokenInfos, and returns the\n   * value of each call in an object keyed by the token.\n   * @param fn the function to be called for each CeloTokenInfo.\n   * @return an object containing the resolved value the call to fn for each\n   *  celo token.\n   */\n\n\n  CeloTokens.prototype.forEachCeloToken = function (fn) {\n    return __awaiter(this, void 0, void 0, function () {\n      var wrapperInfoFunction;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        wrapperInfoFunction = function () {\n          return __awaiter(_this, void 0, void 0, function () {\n            var _a, _b;\n\n            var _this = this;\n\n            return __generator(this, function (_c) {\n              switch (_c.label) {\n                case 0:\n                  _b = (_a = Promise).all;\n                  return [4\n                  /*yield*/\n                  , this.validCeloTokenInfos()];\n\n                case 1:\n                  return [2\n                  /*return*/\n                  , _b.apply(_a, [_c.sent().map(function (info) {\n                    return __awaiter(_this, void 0, void 0, function () {\n                      var fnResult;\n\n                      var _a;\n\n                      return __generator(this, function (_b) {\n                        switch (_b.label) {\n                          case 0:\n                            fnResult = fn(info);\n                            _a = {\n                              symbol: info.symbol\n                            };\n                            return [4\n                            /*yield*/\n                            , fnResult];\n\n                          case 1:\n                            return [2\n                            /*return*/\n                            , (_a.data = _b.sent(), _a)];\n                        }\n                      });\n                    });\n                  })])];\n              }\n            });\n          });\n        };\n\n        return [2\n        /*return*/\n        , this.forEachWrapperInfo(wrapperInfoFunction)];\n      });\n    });\n  };\n  /**\n   * Runs fn for each stable token found in stableTokenInfos, and returns the\n   * value of each call in an object keyed by the token.\n   * @param fn the function to be called for each StableTokenInfo.\n   * @return an object containing the resolved value the call to fn for each\n   *  celo token.\n   */\n\n\n  CeloTokens.prototype.forStableCeloToken = function (fn) {\n    return __awaiter(this, void 0, void 0, function () {\n      var wrapperInfoFunction;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        wrapperInfoFunction = function () {\n          return __awaiter(_this, void 0, void 0, function () {\n            var _a, _b;\n\n            var _this = this;\n\n            return __generator(this, function (_c) {\n              switch (_c.label) {\n                case 0:\n                  _b = (_a = Promise).all;\n                  return [4\n                  /*yield*/\n                  , this.validStableTokenInfos()];\n\n                case 1:\n                  return [2\n                  /*return*/\n                  , _b.apply(_a, [_c.sent().map(function (info) {\n                    return __awaiter(_this, void 0, void 0, function () {\n                      var fnResult;\n\n                      var _a;\n\n                      return __generator(this, function (_b) {\n                        switch (_b.label) {\n                          case 0:\n                            fnResult = fn(info);\n                            _a = {\n                              symbol: info.symbol\n                            };\n                            return [4\n                            /*yield*/\n                            , fnResult];\n\n                          case 1:\n                            return [2\n                            /*return*/\n                            , (_a.data = _b.sent(), _a)];\n                        }\n                      });\n                    });\n                  })])];\n              }\n            });\n          });\n        };\n\n        return [2\n        /*return*/\n        , this.forEachWrapperInfo(wrapperInfoFunction)];\n      });\n    });\n  };\n\n  CeloTokens.prototype.forEachWrapperInfo = function (fn) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , fn()];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.sent().reduce(function (obj, wrapperInfo) {\n              var _a;\n\n              return __assign(__assign({}, obj), (_a = {}, _a[wrapperInfo.symbol] = wrapperInfo.data, _a));\n            }, {})];\n        }\n      });\n    });\n  };\n\n  CeloTokens.prototype.validCeloTokenInfos = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var results;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , Promise.all(Object.values(exports.celoTokenInfos).map(function (info) {\n              return __awaiter(_this, void 0, void 0, function () {\n                var _a;\n\n                return __generator(this, function (_b) {\n                  switch (_b.label) {\n                    case 0:\n                      _b.trys.push([0, 2,, 3]); // The registry add the valid addresses to a cache\n\n\n                      return [4\n                      /*yield*/\n                      , this.kit.registry.addressFor(info.contract)];\n\n                    case 1:\n                      // The registry add the valid addresses to a cache\n                      _b.sent();\n\n                      return [2\n                      /*return*/\n                      , true];\n\n                    case 2:\n                      _a = _b.sent(); // The contract was not deployed in the chain\n\n                      return [2\n                      /*return*/\n                      , false];\n\n                    case 3:\n                      return [2\n                      /*return*/\n                      ];\n                  }\n                });\n              });\n            }))];\n\n          case 1:\n            results = _a.sent();\n            return [2\n            /*return*/\n            , Object.values(exports.celoTokenInfos).filter(function (_v, index) {\n              return results[index];\n            })];\n        }\n      });\n    });\n  };\n\n  CeloTokens.prototype.validStableTokenInfos = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var results;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , Promise.all(Object.values(exports.stableTokenInfos).map(function (info) {\n              return __awaiter(_this, void 0, void 0, function () {\n                var _a;\n\n                return __generator(this, function (_b) {\n                  switch (_b.label) {\n                    case 0:\n                      _b.trys.push([0, 3,, 4]); // The registry add the valid addresses to a cache\n\n\n                      return [4\n                      /*yield*/\n                      , this.kit.registry.addressFor(info.contract)];\n\n                    case 1:\n                      // The registry add the valid addresses to a cache\n                      _b.sent();\n\n                      return [4\n                      /*yield*/\n                      , this.kit.registry.addressFor(info.exchangeContract)];\n\n                    case 2:\n                      _b.sent();\n\n                      return [2\n                      /*return*/\n                      , true];\n\n                    case 3:\n                      _a = _b.sent(); // The contract was not deployed in the chain\n\n                      return [2\n                      /*return*/\n                      , false];\n\n                    case 4:\n                      return [2\n                      /*return*/\n                      ];\n                  }\n                });\n              });\n            }))];\n\n          case 1:\n            results = _a.sent();\n            return [2\n            /*return*/\n            , Object.values(exports.stableTokenInfos).filter(function (_v, index) {\n              return results[index];\n            })];\n        }\n      });\n    });\n  };\n\n  CeloTokens.prototype.getWrapper = function (token) {\n    return this.kit.contracts.getContract(exports.celoTokenInfos[token].contract);\n  };\n\n  CeloTokens.prototype.getContract = function (token) {\n    return exports.celoTokenInfos[token].contract;\n  };\n  /**\n   * Gets the exchange contract for the provided stable token\n   * @param token the stable token to get exchange contract of\n   * @return The exchange contract for the token\n   */\n\n\n  CeloTokens.prototype.getExchangeContract = function (token) {\n    return exports.stableTokenInfos[token].exchangeContract;\n  };\n  /**\n   * Gets the address to use as the feeCurrency when paying for gas with the\n   *  provided token.\n   * @param token the token to get the feeCurrency address for\n   * @return If not CELO, the address of the token's contract. If CELO, undefined.\n   */\n\n\n  CeloTokens.prototype.getFeeCurrencyAddress = function (token) {\n    if (token === Token.CELO) {\n      return undefined;\n    }\n\n    return this.getAddress(token);\n  };\n  /**\n   * Returns if the provided token is a StableToken\n   * @param token the token\n   * @return if token is a StableToken\n   */\n\n\n  CeloTokens.prototype.isStableToken = function (token) {\n    // We cast token as StableToken to make typescript happy\n    return Object.values(StableToken).includes(token);\n  };\n\n  CeloTokens.prototype.isStableTokenContract = function (contract) {\n    var allStableTokenContracts = Object.values(StableToken).map(function (token) {\n      return exports.stableTokenInfos[token].contract;\n    }); // We cast token as StableTokenContract to make typescript happy\n\n    return allStableTokenContracts.includes(contract);\n  };\n\n  return CeloTokens;\n}();\n\nexports.CeloTokens = CeloTokens;","map":{"version":3,"sources":["../src/celo-tokens.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,IAAA,MAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;AAKA,IAAY,WAAZ;;AAAA,CAAA,UAAY,WAAZ,EAAuB;AACrB,EAAA,WAAA,CAAA,MAAA,CAAA,GAAA,MAAA;AACA,EAAA,WAAA,CAAA,MAAA,CAAA,GAAA,MAAA;AACA,EAAA,WAAA,CAAA,OAAA,CAAA,GAAA,OAAA;AACD,CAJD,EAAY,WAAW,GAAX,OAAA,CAAA,WAAA,KAAA,OAAA,CAAA,WAAA,GAAW,EAAX,CAAZ;;AAMA,IAAY,KAAZ;;AAAA,CAAA,UAAY,KAAZ,EAAiB;AACf,EAAA,KAAA,CAAA,MAAA,CAAA,GAAA,MAAA;AACD,CAFD,EAAY,KAAK,GAAL,OAAA,CAAA,KAAA,KAAA,OAAA,CAAA,KAAA,GAAK,EAAL,CAAZ;AAsBA;;;AACa,OAAA,CAAA,gBAAA,IAAgB,EAAA,GAAA,EAAA,EAG3B,EAAA,CAAC,WAAW,CAAC,IAAb,CAAA,GAAoB;AAClB,EAAA,QAAQ,EAAE,MAAA,CAAA,YAAA,CAAa,WADL;AAElB,EAAA,gBAAgB,EAAE,MAAA,CAAA,YAAA,CAAa,QAFb;AAGlB,EAAA,MAAM,EAAE,WAAW,CAAC;AAHF,CAHO,EAQ3B,EAAA,CAAC,WAAW,CAAC,IAAb,CAAA,GAAoB;AAClB,EAAA,QAAQ,EAAE,MAAA,CAAA,YAAA,CAAa,cADL;AAElB,EAAA,gBAAgB,EAAE,MAAA,CAAA,YAAA,CAAa,WAFb;AAGlB,EAAA,MAAM,EAAE,WAAW,CAAC;AAHF,CARO,EAa3B,EAAA,CAAC,WAAW,CAAC,KAAb,CAAA,GAAqB;AACnB,EAAA,QAAQ,EAAE,MAAA,CAAA,YAAA,CAAa,cADJ;AAEnB,EAAA,gBAAgB,EAAE,MAAA,CAAA,YAAA,CAAa,WAFZ;AAGnB,EAAA,MAAM,EAAE,WAAW,CAAC;AAHD,CAbM,EAkB5B,EAlBY;AAoBb;;AACa,OAAA,CAAA,cAAA,GAAc,QAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,CAGxB,KAAK,CAAC,IAHkB,CAAA,GAGX;AACZ,EAAA,QAAQ,EAAE,MAAA,CAAA,YAAA,CAAa,SADX;AAEZ,EAAA,MAAM,EAAE,KAAK,CAAC;AAFF,CAHW,EAMxB,EANwB,GAOtB,OAAA,CAAA,gBAPsB,CAAd;AAUb;;AAEG;;AACH,IAAA,UAAA;AAAA;AAAA,YAAA;AACE,WAAA,UAAA,CAAqB,GAArB,EAAqC;AAArC,QAAA,KAAA,GAAA,IAAA;;AAAqB,SAAA,GAAA,GAAA,GAAA;AAwLrB;;;;AAIG;;AACH,SAAA,UAAA,GAAa,UAAC,KAAD,EAAqB;AAChC,aAAA,KAAI,CAAC,GAAL,CAAS,QAAT,CAAkB,UAAlB,CAA6B,OAAA,CAAA,cAAA,CAAe,KAAf,EAAsB,QAAnD,CAAA;AAA4D,KAD9D;AA7LyC;AAEzC;;;;;AAKG;;;AACH,EAAA,UAAA,CAAA,SAAA,CAAA,UAAA,GAAA,UAAW,OAAX,EAA0B;AAA1B,QAAA,KAAA,GAAA,IAAA;;AACE,WAAO,KAAK,gBAAL,CAAsB,UAAO,IAAP,EAA0B;AAAA,aAAA,SAAA,CAAA,KAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;;;;AACrC,qBAAA,CAAA;AAAA;AAAA,gBAAM,KAAK,GAAL,CAAS,SAAT,CAAmB,WAAnB,CAA+B,IAAI,CAAC,QAApC,CAAN,CAAA;;;AAAV,cAAA,OAAO,GAAG,EAAA,CAAA,IAAA,EAAV;AACN,qBAAA,CAAA;AAAA;AAAA,gBAAO,OAAO,CAAC,SAAR,CAAkB,OAAlB,CAAP,CAAA;;;OAFqD,CAAA;AAGtD,KAHM,CAAP;AAID,GALD;AAOA;;;AAGG;;;AACH,EAAA,UAAA,CAAA,SAAA,CAAA,WAAA,GAAA,YAAA;AAAA,QAAA,KAAA,GAAA,IAAA;;AACE,WAAO,KAAK,gBAAL,CAAsB,UAAC,IAAD,EAAoB;AAC/C,aAAA,KAAI,CAAC,GAAL,CAAS,SAAT,CAAmB,WAAnB,CAA+B,IAAI,CAAC,QAApC,CAAA;AAA6C,KADxC,CAAP;AAGD,GAJD;AAMA;;;AAGG;;;AACH,EAAA,UAAA,CAAA,SAAA,CAAA,YAAA,GAAA,YAAA;AAAA,QAAA,KAAA,GAAA,IAAA;;AACE,WAAO,KAAK,gBAAL,CAAsB,UAAC,IAAD,EAAoB;AAC/C,aAAA,KAAI,CAAC,GAAL,CAAS,QAAT,CAAkB,UAAlB,CAA6B,IAAI,CAAC,QAAlC,CAAA;AAA2C,KADtC,CAAP;AAGD,GAJD;;AAMM,EAAA,UAAA,CAAA,SAAA,CAAA,iBAAA,GAAN,UAAwB,aAAxB,EAAsD;AAA9B,QAAA,aAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,aAAA,GAAA,KAAA;AAA8B;;;;;;AACpD,eAAA,CAAA;AAAA;AAAA,UAAO,KAAK,kBAAL,CAAwB,UAAO,IAAP,EAA4B;AAAA,iBAAA,SAAA,CAAA,KAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;;;;AACnC,yBAAA,CAAA;AAAA;AAAA,oBAAM,KAAK,GAAL,CAAS,SAAT,CAAmB,WAAnB,CAA+B,IAAI,CAAC,QAApC,CAAN,CAAA;;;AAAhB,kBAAA,aAAa,GAAG,EAAA,CAAA,IAAA,EAAhB;;AACN,sBAAI,aAAJ,EAAmB;AACjB,2BAAA,CAAA;AAAA;AAAA,sBAAO,aAAa,CAAC,sBAAd,EAAP,CAAA;AACD;;AACD,yBAAA,CAAA;AAAA;AAAA,oBAAO,aAAa,CAAC,SAAd,EAAP,CAAA;;;WALyD,CAAA;AAM1D,SANM,CAAP,CAAA;;;AAOD,GARK;;AAUA,EAAA,UAAA,CAAA,SAAA,CAAA,mBAAA,GAAN,UAA0B,aAA1B,EAAwD;AAA9B,QAAA,aAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,aAAA,GAAA,KAAA;AAA8B;;;;;;AACtD,eAAA,CAAA;AAAA;AAAA,UAAO,KAAK,kBAAL,CAAwB,UAAO,IAAP,EAA4B;AAAA,iBAAA,SAAA,CAAA,KAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;;;;AACjC,yBAAA,CAAA;AAAA;AAAA,oBAAM,KAAK,GAAL,CAAS,SAAT,CAAmB,WAAnB,CAA+B,IAAI,CAAC,gBAApC,CAAN,CAAA;;;AAAlB,kBAAA,eAAe,GAAG,EAAA,CAAA,IAAA,EAAlB;;AACN,sBAAI,aAAJ,EAAmB;AACjB,2BAAA,CAAA;AAAA;AAAA,sBAAO,eAAe,CAAC,sBAAhB,EAAP,CAAA;AACD;;AACD,yBAAA,CAAA;AAAA;AAAA,oBAAO,eAAe,CAAC,SAAhB,EAAP,CAAA;;;WALyD,CAAA;AAM1D,SANM,CAAP,CAAA;;;AAOD,GARK;AAUN;;;;;;AAMG;;;AACG,EAAA,UAAA,CAAA,SAAA,CAAA,gBAAA,GAAN,UACE,EADF,EAC6C;;;;;;;AAErC,QAAA,mBAAmB,GAAG,YAAA;AAAA,iBAAA,SAAA,CAAA,KAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;;;;;;;AAC1B,kBAAA,EAAA,GAAA,CAAA,EAAA,GAAA,OAAA,EAAQ,GAAR;AACG,yBAAA,CAAA;AAAA;AAAA,oBAAM,KAAK,mBAAL,EAAN,CAAA;;;AADH,yBAAA,CAAA;AAAA;AAAA,oBAAA,EAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CACG,EAAA,CAAA,IAAA,EAAD,CAAmC,GAAnC,CAAuC,UAAO,IAAP,EAAW;AAAA,2BAAA,SAAA,CAAA,KAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;;;;;;;AAC1C,4BAAA,QAAQ,GAAG,EAAE,CAAC,IAAD,CAAb;;AAEJ,8BAAA,MAAM,EAAE,IAAI,CAAC;;AACP,mCAAA,CAAA;AAAA;AAAA,8BAAM,QAAN,CAAA;;;AAFR,mCAAA,CAAA;AAAA;AAAA,+BAEE,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EACD,EAHD,EAAA;;;qBAFgD,CAAA;AAMjD,mBAND,CADF,CAAA,CAAA,CAAA;;;WAD0B,CAAA;AASzB,SATG;;AAUN,eAAA,CAAA;AAAA;AAAA,UAAO,KAAK,kBAAL,CAAwB,mBAAxB,CAAP,CAAA;;;AACD,GAdK;AAgBN;;;;;;AAMG;;;AACG,EAAA,UAAA,CAAA,SAAA,CAAA,kBAAA,GAAN,UACE,EADF,EAC+C;;;;;;;AAEvC,QAAA,mBAAmB,GAAG,YAAA;AAAA,iBAAA,SAAA,CAAA,KAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;;;;;;;AAC1B,kBAAA,EAAA,GAAA,CAAA,EAAA,GAAA,OAAA,EAAQ,GAAR;AACG,yBAAA,CAAA;AAAA;AAAA,oBAAM,KAAK,qBAAL,EAAN,CAAA;;;AADH,yBAAA,CAAA;AAAA;AAAA,oBAAA,EAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CACG,EAAA,CAAA,IAAA,EAAD,CAAqC,GAArC,CAAyC,UAAO,IAAP,EAAW;AAAA,2BAAA,SAAA,CAAA,KAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;;;;;;;AAC5C,4BAAA,QAAQ,GAAG,EAAE,CAAC,IAAD,CAAb;;AAEJ,8BAAA,MAAM,EAAE,IAAI,CAAC;;AACP,mCAAA,CAAA;AAAA;AAAA,8BAAM,QAAN,CAAA;;;AAFR,mCAAA,CAAA;AAAA;AAAA,+BAEE,EAAA,CAAA,IAAA,GAAM,EAAA,CAAA,IAAA,EAAN,EACD,EAHD,EAAA;;;qBAFkD,CAAA;AAMnD,mBAND,CADF,CAAA,CAAA,CAAA;;;WAD0B,CAAA;AASzB,SATG;;AAUN,eAAA,CAAA;AAAA;AAAA,UAAO,KAAK,kBAAL,CAAwB,mBAAxB,CAAP,CAAA;;;AACD,GAdK;;AAgBQ,EAAA,UAAA,CAAA,SAAA,CAAA,kBAAA,GAAd,UACE,EADF,EAC8D;;;;;AAEpD,mBAAA,CAAA;AAAA;AAAA,cAAM,EAAE,EAAR,CAAA;;;AAAR,mBAAA,CAAA;AAAA;AAAA,cAAQ,EAAA,CAAA,IAAA,EAAD,CAAa,MAAb,CACL,UACE,GADF,EAIE,WAJF,EAIa;;;AACR,qBAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACA,GADA,CAAA,GACG,EAAA,GAAA,EAAA,EAAA,EAAA,CACL,WAAW,CAAC,MADP,CAAA,GACgB,WAAW,CAAC,IAD5B,EACgC,EAFnC,EAAA;AAGH,aATG,EAUL,EAVK,CAAP,CAAA;;;;AAYD,GAfa;;AAiBR,EAAA,UAAA,CAAA,SAAA,CAAA,mBAAA,GAAN,YAAA;;;;;;;;;AACkB,mBAAA,CAAA;AAAA;AAAA,cAAM,OAAO,CAAC,GAAR,CACpB,MAAM,CAAC,MAAP,CAAc,OAAA,CAAA,cAAd,EAA8B,GAA9B,CAAkC,UAAO,IAAP,EAAW;AAAA,qBAAA,SAAA,CAAA,KAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;;;;;gDAEzC;;;AACA,6BAAA,CAAA;AAAA;AAAA,wBAAM,KAAK,GAAL,CAAS,QAAT,CAAkB,UAAlB,CAA6B,IAAI,CAAC,QAAlC,CAAN,CAAA;;;AADA;AACA,sBAAA,EAAA,CAAA,IAAA;;AACA,6BAAA,CAAA;AAAA;AAAA,wBAAO,IAAP,CAAA;;;sCAEA;;AACA,6BAAA,CAAA;AAAA;AAAA,wBAAO,KAAP,CAAA;;;;;;;;eAPyC,CAAA;AAS5C,aATD,CADoB,CAAN,CAAA;;;AAAV,YAAA,OAAO,GAAG,EAAA,CAAA,IAAA,EAAV;AAaN,mBAAA,CAAA;AAAA;AAAA,cAAO,MAAM,CAAC,MAAP,CAAc,OAAA,CAAA,cAAd,EAA8B,MAA9B,CAAqC,UAAC,EAAD,EAAK,KAAL,EAAU;AAAK,qBAAA,OAAO,CAAP,KAAO,CAAP;AAAc,aAAlE,CAAP,CAAA;;;;AACD,GAfK;;AAiBA,EAAA,UAAA,CAAA,SAAA,CAAA,qBAAA,GAAN,YAAA;;;;;;;;;AACkB,mBAAA,CAAA;AAAA;AAAA,cAAM,OAAO,CAAC,GAAR,CACpB,MAAM,CAAC,MAAP,CAAc,OAAA,CAAA,gBAAd,EAAgC,GAAhC,CAAoC,UAAO,IAAP,EAAW;AAAA,qBAAA,SAAA,CAAA,KAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;;;;;gDAE3C;;;AACA,6BAAA,CAAA;AAAA;AAAA,wBAAM,KAAK,GAAL,CAAS,QAAT,CAAkB,UAAlB,CAA6B,IAAI,CAAC,QAAlC,CAAN,CAAA;;;AADA;AACA,sBAAA,EAAA,CAAA,IAAA;;AACA,6BAAA,CAAA;AAAA;AAAA,wBAAM,KAAK,GAAL,CAAS,QAAT,CAAkB,UAAlB,CAA6B,IAAI,CAAC,gBAAlC,CAAN,CAAA;;;AAAA,sBAAA,EAAA,CAAA,IAAA;;AACA,6BAAA,CAAA;AAAA;AAAA,wBAAO,IAAP,CAAA;;;sCAEA;;AACA,6BAAA,CAAA;AAAA;AAAA,wBAAO,KAAP,CAAA;;;;;;;;eAR2C,CAAA;AAU9C,aAVD,CADoB,CAAN,CAAA;;;AAAV,YAAA,OAAO,GAAG,EAAA,CAAA,IAAA,EAAV;AAcN,mBAAA,CAAA;AAAA;AAAA,cAAO,MAAM,CAAC,MAAP,CAAc,OAAA,CAAA,gBAAd,EAAgC,MAAhC,CAAuC,UAAC,EAAD,EAAK,KAAL,EAAU;AAAK,qBAAA,OAAO,CAAP,KAAO,CAAP;AAAc,aAApE,CAAP,CAAA;;;;AACD,GAhBK;;AA0BN,EAAA,UAAA,CAAA,SAAA,CAAA,UAAA,GAAA,UAAW,KAAX,EAA+B;AAC7B,WAAO,KAAK,GAAL,CAAS,SAAT,CAAmB,WAAnB,CAA+B,OAAA,CAAA,cAAA,CAAe,KAAf,EAAsB,QAArD,CAAP;AACD,GAFD;;AAUA,EAAA,UAAA,CAAA,SAAA,CAAA,WAAA,GAAA,UAAY,KAAZ,EAAgC;AAC9B,WAAO,OAAA,CAAA,cAAA,CAAe,KAAf,EAAsB,QAA7B;AACD,GAFD;AAIA;;;;AAIG;;;AACH,EAAA,UAAA,CAAA,SAAA,CAAA,mBAAA,GAAA,UAAoB,KAApB,EAAsC;AACpC,WAAO,OAAA,CAAA,gBAAA,CAAiB,KAAjB,EAAwB,gBAA/B;AACD,GAFD;AAYA;;;;;AAKG;;;AACH,EAAA,UAAA,CAAA,SAAA,CAAA,qBAAA,GAAA,UAAsB,KAAtB,EAA0C;AACxC,QAAI,KAAK,KAAK,KAAK,CAAC,IAApB,EAA0B;AACxB,aAAO,SAAP;AACD;;AACD,WAAO,KAAK,UAAL,CAAgB,KAAhB,CAAP;AACD,GALD;AAOA;;;;AAIG;;;AACH,EAAA,UAAA,CAAA,SAAA,CAAA,aAAA,GAAA,UAAc,KAAd,EAAkC;AAChC;AACA,WAAO,MAAM,CAAC,MAAP,CAAc,WAAd,EAA2B,QAA3B,CAAoC,KAApC,CAAP;AACD,GAHD;;AAKA,EAAA,UAAA,CAAA,SAAA,CAAA,qBAAA,GAAA,UAAsB,QAAtB,EAA4C;AAC1C,QAAM,uBAAuB,GAAG,MAAM,CAAC,MAAP,CAAc,WAAd,EAA2B,GAA3B,CAC9B,UAAC,KAAD,EAAM;AAAK,aAAA,OAAA,CAAA,gBAAA,CAAiB,KAAjB,EAAA,QAAA;AAAgC,KADb,CAAhC,CAD0C,CAI1C;;AACA,WAAO,uBAAuB,CAAC,QAAxB,CAAiC,QAAjC,CAAP;AACD,GAND;;AAOF,SAAA,UAAA;AAAC,CA/ND,EAAA;;AAAa,OAAA,CAAA,UAAA,GAAA,UAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar _a, _b;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CeloTokens = exports.celoTokenInfos = exports.stableTokenInfos = exports.Token = exports.StableToken = void 0;\nvar base_1 = require(\"./base\");\nvar StableToken;\n(function (StableToken) {\n    StableToken[\"cUSD\"] = \"cUSD\";\n    StableToken[\"cEUR\"] = \"cEUR\";\n    StableToken[\"cREAL\"] = \"cREAL\";\n})(StableToken = exports.StableToken || (exports.StableToken = {}));\nvar Token;\n(function (Token) {\n    Token[\"CELO\"] = \"CELO\";\n})(Token = exports.Token || (exports.Token = {}));\n/** Basic info for each stable token */\nexports.stableTokenInfos = (_a = {},\n    _a[StableToken.cUSD] = {\n        contract: base_1.CeloContract.StableToken,\n        exchangeContract: base_1.CeloContract.Exchange,\n        symbol: StableToken.cUSD,\n    },\n    _a[StableToken.cEUR] = {\n        contract: base_1.CeloContract.StableTokenEUR,\n        exchangeContract: base_1.CeloContract.ExchangeEUR,\n        symbol: StableToken.cEUR,\n    },\n    _a[StableToken.cREAL] = {\n        contract: base_1.CeloContract.StableTokenBRL,\n        exchangeContract: base_1.CeloContract.ExchangeBRL,\n        symbol: StableToken.cREAL,\n    },\n    _a);\n/** Basic info for each supported celo token, including stable tokens */\nexports.celoTokenInfos = __assign((_b = {}, _b[Token.CELO] = {\n    contract: base_1.CeloContract.GoldToken,\n    symbol: Token.CELO,\n}, _b), exports.stableTokenInfos);\n/**\n * A helper class to interact with all Celo tokens, ie CELO and stable tokens\n */\nvar CeloTokens = /** @class */ (function () {\n    function CeloTokens(kit) {\n        var _this = this;\n        this.kit = kit;\n        /**\n         * Gets the address of the contract for the provided token.\n         * @param token the token to get the (proxy) contract address for\n         * @return A promise resolving to the address of the token's contract\n         */\n        this.getAddress = function (token) {\n            return _this.kit.registry.addressFor(exports.celoTokenInfos[token].contract);\n        };\n    }\n    /**\n     * Gets an address's balance for each celo token.\n     * @param address the address to look up the balances for\n     * @return a promise resolving to an object containing the address's balance\n     *  for each celo token\n     */\n    CeloTokens.prototype.balancesOf = function (address) {\n        var _this = this;\n        return this.forEachCeloToken(function (info) { return __awaiter(_this, void 0, void 0, function () {\n            var wrapper;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.kit.contracts.getContract(info.contract)];\n                    case 1:\n                        wrapper = _a.sent();\n                        return [2 /*return*/, wrapper.balanceOf(address)];\n                }\n            });\n        }); });\n    };\n    /**\n     * Gets the wrapper for each celo token.\n     * @return an promise resolving to an object containing the wrapper for each celo token.\n     */\n    CeloTokens.prototype.getWrappers = function () {\n        var _this = this;\n        return this.forEachCeloToken(function (info) {\n            return _this.kit.contracts.getContract(info.contract);\n        });\n    };\n    /**\n     * Gets the address for each celo token proxy contract.\n     * @return an promise resolving to an object containing the address for each celo token proxy.\n     */\n    CeloTokens.prototype.getAddresses = function () {\n        var _this = this;\n        return this.forEachCeloToken(function (info) {\n            return _this.kit.registry.addressFor(info.contract);\n        });\n    };\n    CeloTokens.prototype.getStablesConfigs = function (humanReadable) {\n        if (humanReadable === void 0) { humanReadable = false; }\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.forStableCeloToken(function (info) { return __awaiter(_this, void 0, void 0, function () {\n                        var stableWrapper;\n                        return __generator(this, function (_a) {\n                            switch (_a.label) {\n                                case 0: return [4 /*yield*/, this.kit.contracts.getContract(info.contract)];\n                                case 1:\n                                    stableWrapper = _a.sent();\n                                    if (humanReadable) {\n                                        return [2 /*return*/, stableWrapper.getHumanReadableConfig()];\n                                    }\n                                    return [2 /*return*/, stableWrapper.getConfig()];\n                            }\n                        });\n                    }); })];\n            });\n        });\n    };\n    CeloTokens.prototype.getExchangesConfigs = function (humanReadable) {\n        if (humanReadable === void 0) { humanReadable = false; }\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.forStableCeloToken(function (info) { return __awaiter(_this, void 0, void 0, function () {\n                        var exchangeWrapper;\n                        return __generator(this, function (_a) {\n                            switch (_a.label) {\n                                case 0: return [4 /*yield*/, this.kit.contracts.getContract(info.exchangeContract)];\n                                case 1:\n                                    exchangeWrapper = _a.sent();\n                                    if (humanReadable) {\n                                        return [2 /*return*/, exchangeWrapper.getHumanReadableConfig()];\n                                    }\n                                    return [2 /*return*/, exchangeWrapper.getConfig()];\n                            }\n                        });\n                    }); })];\n            });\n        });\n    };\n    /**\n     * Runs fn for each celo token found in celoTokenInfos, and returns the\n     * value of each call in an object keyed by the token.\n     * @param fn the function to be called for each CeloTokenInfo.\n     * @return an object containing the resolved value the call to fn for each\n     *  celo token.\n     */\n    CeloTokens.prototype.forEachCeloToken = function (fn) {\n        return __awaiter(this, void 0, void 0, function () {\n            var wrapperInfoFunction;\n            var _this = this;\n            return __generator(this, function (_a) {\n                wrapperInfoFunction = function () { return __awaiter(_this, void 0, void 0, function () {\n                    var _a, _b;\n                    var _this = this;\n                    return __generator(this, function (_c) {\n                        switch (_c.label) {\n                            case 0:\n                                _b = (_a = Promise).all;\n                                return [4 /*yield*/, this.validCeloTokenInfos()];\n                            case 1: return [2 /*return*/, _b.apply(_a, [(_c.sent()).map(function (info) { return __awaiter(_this, void 0, void 0, function () {\n                                        var fnResult;\n                                        var _a;\n                                        return __generator(this, function (_b) {\n                                            switch (_b.label) {\n                                                case 0:\n                                                    fnResult = fn(info);\n                                                    _a = {\n                                                        symbol: info.symbol\n                                                    };\n                                                    return [4 /*yield*/, fnResult];\n                                                case 1: return [2 /*return*/, (_a.data = _b.sent(),\n                                                        _a)];\n                                            }\n                                        });\n                                    }); })])];\n                        }\n                    });\n                }); };\n                return [2 /*return*/, this.forEachWrapperInfo(wrapperInfoFunction)];\n            });\n        });\n    };\n    /**\n     * Runs fn for each stable token found in stableTokenInfos, and returns the\n     * value of each call in an object keyed by the token.\n     * @param fn the function to be called for each StableTokenInfo.\n     * @return an object containing the resolved value the call to fn for each\n     *  celo token.\n     */\n    CeloTokens.prototype.forStableCeloToken = function (fn) {\n        return __awaiter(this, void 0, void 0, function () {\n            var wrapperInfoFunction;\n            var _this = this;\n            return __generator(this, function (_a) {\n                wrapperInfoFunction = function () { return __awaiter(_this, void 0, void 0, function () {\n                    var _a, _b;\n                    var _this = this;\n                    return __generator(this, function (_c) {\n                        switch (_c.label) {\n                            case 0:\n                                _b = (_a = Promise).all;\n                                return [4 /*yield*/, this.validStableTokenInfos()];\n                            case 1: return [2 /*return*/, _b.apply(_a, [(_c.sent()).map(function (info) { return __awaiter(_this, void 0, void 0, function () {\n                                        var fnResult;\n                                        var _a;\n                                        return __generator(this, function (_b) {\n                                            switch (_b.label) {\n                                                case 0:\n                                                    fnResult = fn(info);\n                                                    _a = {\n                                                        symbol: info.symbol\n                                                    };\n                                                    return [4 /*yield*/, fnResult];\n                                                case 1: return [2 /*return*/, (_a.data = _b.sent(),\n                                                        _a)];\n                                            }\n                                        });\n                                    }); })])];\n                        }\n                    });\n                }); };\n                return [2 /*return*/, this.forEachWrapperInfo(wrapperInfoFunction)];\n            });\n        });\n    };\n    CeloTokens.prototype.forEachWrapperInfo = function (fn) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, fn()];\n                    case 1: return [2 /*return*/, (_a.sent()).reduce(function (obj, wrapperInfo) {\n                            var _a;\n                            return (__assign(__assign({}, obj), (_a = {}, _a[wrapperInfo.symbol] = wrapperInfo.data, _a)));\n                        }, {})];\n                }\n            });\n        });\n    };\n    CeloTokens.prototype.validCeloTokenInfos = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var results;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, Promise.all(Object.values(exports.celoTokenInfos).map(function (info) { return __awaiter(_this, void 0, void 0, function () {\n                            var _a;\n                            return __generator(this, function (_b) {\n                                switch (_b.label) {\n                                    case 0:\n                                        _b.trys.push([0, 2, , 3]);\n                                        // The registry add the valid addresses to a cache\n                                        return [4 /*yield*/, this.kit.registry.addressFor(info.contract)];\n                                    case 1:\n                                        // The registry add the valid addresses to a cache\n                                        _b.sent();\n                                        return [2 /*return*/, true];\n                                    case 2:\n                                        _a = _b.sent();\n                                        // The contract was not deployed in the chain\n                                        return [2 /*return*/, false];\n                                    case 3: return [2 /*return*/];\n                                }\n                            });\n                        }); }))];\n                    case 1:\n                        results = _a.sent();\n                        return [2 /*return*/, Object.values(exports.celoTokenInfos).filter(function (_v, index) { return results[index]; })];\n                }\n            });\n        });\n    };\n    CeloTokens.prototype.validStableTokenInfos = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var results;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, Promise.all(Object.values(exports.stableTokenInfos).map(function (info) { return __awaiter(_this, void 0, void 0, function () {\n                            var _a;\n                            return __generator(this, function (_b) {\n                                switch (_b.label) {\n                                    case 0:\n                                        _b.trys.push([0, 3, , 4]);\n                                        // The registry add the valid addresses to a cache\n                                        return [4 /*yield*/, this.kit.registry.addressFor(info.contract)];\n                                    case 1:\n                                        // The registry add the valid addresses to a cache\n                                        _b.sent();\n                                        return [4 /*yield*/, this.kit.registry.addressFor(info.exchangeContract)];\n                                    case 2:\n                                        _b.sent();\n                                        return [2 /*return*/, true];\n                                    case 3:\n                                        _a = _b.sent();\n                                        // The contract was not deployed in the chain\n                                        return [2 /*return*/, false];\n                                    case 4: return [2 /*return*/];\n                                }\n                            });\n                        }); }))];\n                    case 1:\n                        results = _a.sent();\n                        return [2 /*return*/, Object.values(exports.stableTokenInfos).filter(function (_v, index) { return results[index]; })];\n                }\n            });\n        });\n    };\n    CeloTokens.prototype.getWrapper = function (token) {\n        return this.kit.contracts.getContract(exports.celoTokenInfos[token].contract);\n    };\n    CeloTokens.prototype.getContract = function (token) {\n        return exports.celoTokenInfos[token].contract;\n    };\n    /**\n     * Gets the exchange contract for the provided stable token\n     * @param token the stable token to get exchange contract of\n     * @return The exchange contract for the token\n     */\n    CeloTokens.prototype.getExchangeContract = function (token) {\n        return exports.stableTokenInfos[token].exchangeContract;\n    };\n    /**\n     * Gets the address to use as the feeCurrency when paying for gas with the\n     *  provided token.\n     * @param token the token to get the feeCurrency address for\n     * @return If not CELO, the address of the token's contract. If CELO, undefined.\n     */\n    CeloTokens.prototype.getFeeCurrencyAddress = function (token) {\n        if (token === Token.CELO) {\n            return undefined;\n        }\n        return this.getAddress(token);\n    };\n    /**\n     * Returns if the provided token is a StableToken\n     * @param token the token\n     * @return if token is a StableToken\n     */\n    CeloTokens.prototype.isStableToken = function (token) {\n        // We cast token as StableToken to make typescript happy\n        return Object.values(StableToken).includes(token);\n    };\n    CeloTokens.prototype.isStableTokenContract = function (contract) {\n        var allStableTokenContracts = Object.values(StableToken).map(function (token) { return exports.stableTokenInfos[token].contract; });\n        // We cast token as StableTokenContract to make typescript happy\n        return allStableTokenContracts.includes(contract);\n    };\n    return CeloTokens;\n}());\nexports.CeloTokens = CeloTokens;\n//# sourceMappingURL=celo-tokens.js.map"]},"metadata":{},"sourceType":"script"}